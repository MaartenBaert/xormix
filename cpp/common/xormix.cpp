// Copyright (c) 2020-2021 Maarten Baert <info@maartenbaert.be>
// Available under the MIT License - see LICENSE.txt for details.

// This file was generated by `generate_cpp.py`.

#include "xormix.hpp"

template<>
const std::initializer_list<xormix16::word_t> xormix16::TEST_PERIODS = {
	{UINT16_C(0x5555)}, {UINT16_C(0x3333)},
	{UINT16_C(0x0f0f)}, {UINT16_C(0x00ff)},
};

template<>
const std::initializer_list<xormix24::word_t> xormix24::TEST_PERIODS = {
	{UINT32_C(0x555555)}, {UINT32_C(0x333333)},
	{UINT32_C(0x249249)}, {UINT32_C(0x13b13b)},
	{UINT32_C(0x0f0f0f)}, {UINT32_C(0x010fef)},
};

template<>
const std::initializer_list<xormix32::word_t> xormix32::TEST_PERIODS = {
	{UINT32_C(0x55555555)}, {UINT32_C(0x33333333)},
	{UINT32_C(0x0f0f0f0f)}, {UINT32_C(0x00ff00ff)},
	{UINT32_C(0x0000ffff)},
};

template<>
const std::initializer_list<xormix48::word_t> xormix48::TEST_PERIODS = {
	{UINT64_C(0x555555555555)}, {UINT64_C(0x333333333333)},
	{UINT64_C(0x249249249249)}, {UINT64_C(0x13b13b13b13b)},
	{UINT64_C(0x0f0f0f0f0f0f)}, {UINT64_C(0x02a3a0fd5c5f)},
	{UINT64_C(0x010fef010fef)}, {UINT64_C(0x00ff00ff00ff)},
	{UINT64_C(0x006160ff9e9f)},
};

template<>
const std::initializer_list<xormix64::word_t> xormix64::TEST_PERIODS = {
	{UINT64_C(0x5555555555555555)}, {UINT64_C(0x3333333333333333)},
	{UINT64_C(0x0f0f0f0f0f0f0f0f)}, {UINT64_C(0x00ff00ff00ff00ff)},
	{UINT64_C(0x00663d80ff99c27f)}, {UINT64_C(0x0000ffff0000ffff)},
	{UINT64_C(0x00000280fffffd7f)},
};

template<>
const std::initializer_list<xormix96::word_t> xormix96::TEST_PERIODS = {
	{UINT64_C(0x555555555555), UINT64_C(0x555555555555)},
	{UINT64_C(0x333333333333), UINT64_C(0x333333333333)},
	{UINT64_C(0x249249249249), UINT64_C(0x249249249249)},
	{UINT64_C(0x13b13b13b13b), UINT64_C(0x13b13b13b13b)},
	{UINT64_C(0x0f0f0f0f0f0f), UINT64_C(0x0f0f0f0f0f0f)},
	{UINT64_C(0x02a3a0fd5c5f), UINT64_C(0x02a3a0fd5c5f)},
	{UINT64_C(0xfeac6f6b70bf), UINT64_C(0x015390948f40)},
	{UINT64_C(0x010fef010fef), UINT64_C(0x010fef010fef)},
	{UINT64_C(0x00ff00ff00ff), UINT64_C(0x00ff00ff00ff)},
	{UINT64_C(0x006160ff9e9f), UINT64_C(0x006160ff9e9f)},
	{UINT64_C(0xffff0000ffff), UINT64_C(0x0000ffff0000)},
	{UINT64_C(0xffffff3eff3f), UINT64_C(0x000000c100c0)},
};

template<>
const std::initializer_list<xormix128::word_t> xormix128::TEST_PERIODS = {
	{UINT64_C(0x5555555555555555), UINT64_C(0x5555555555555555)},
	{UINT64_C(0x3333333333333333), UINT64_C(0x3333333333333333)},
	{UINT64_C(0x0f0f0f0f0f0f0f0f), UINT64_C(0x0f0f0f0f0f0f0f0f)},
	{UINT64_C(0x00ff00ff00ff00ff), UINT64_C(0x00ff00ff00ff00ff)},
	{UINT64_C(0x00663d80ff99c27f), UINT64_C(0x00663d80ff99c27f)},
	{UINT64_C(0x0000ffff0000ffff), UINT64_C(0x0000ffff0000ffff)},
	{UINT64_C(0xffffc2cf0e632eff), UINT64_C(0x00003d30f19cd100)},
	{UINT64_C(0x00000280fffffd7f), UINT64_C(0x00000280fffffd7f)},
	{UINT64_C(0xfffffffffffbd0ff), UINT64_C(0x0000000000042f00)},
};

template<>
const xormix16::matrix_t xormix16::XORMIX_MATRIX = {
	UINT16_C(0x46cc), UINT16_C(0x3858), UINT16_C(0x4161), UINT16_C(0x02d8),
	UINT16_C(0x0cc4), UINT16_C(0xea02), UINT16_C(0x9980), UINT16_C(0x2126),
	UINT16_C(0x2509), UINT16_C(0x863c), UINT16_C(0x5087), UINT16_C(0xe0a0),
	UINT16_C(0x9a31), UINT16_C(0x0d12), UINT16_C(0x900a), UINT16_C(0x2223),
};

template<>
const xormix24::matrix_t xormix24::XORMIX_MATRIX = {
	UINT32_C(0xa50204), UINT32_C(0x938008), UINT32_C(0xc01042), UINT32_C(0x088418),
	UINT32_C(0x402431), UINT32_C(0x220481), UINT32_C(0x511800), UINT32_C(0x138800),
	UINT32_C(0x302070), UINT32_C(0x01122c), UINT32_C(0x0438a0), UINT32_C(0x080259),
	UINT32_C(0x800412), UINT32_C(0x00c064), UINT32_C(0xc20081), UINT32_C(0x00f300),
	UINT32_C(0x34018a), UINT32_C(0x4a8082), UINT32_C(0x064005), UINT32_C(0x884022),
	UINT32_C(0x002b40), UINT32_C(0x2c2804), UINT32_C(0x204702), UINT32_C(0x080988),
};

template<>
const xormix32::matrix_t xormix32::XORMIX_MATRIX = {
	UINT32_C(0x80181808), UINT32_C(0x28200600), UINT32_C(0x90400281), UINT32_C(0x00018502),
	UINT32_C(0x41860020), UINT32_C(0x00001283), UINT32_C(0x02802020), UINT32_C(0x02408070),
	UINT32_C(0x08a84040), UINT32_C(0x82029008), UINT32_C(0x04080082), UINT32_C(0x1b020002),
	UINT32_C(0x43500104), UINT32_C(0x22c40180), UINT32_C(0x00a20408), UINT32_C(0x40100830),
	UINT32_C(0x2c108000), UINT32_C(0x00102204), UINT32_C(0x90002019), UINT32_C(0x1c250000),
	UINT32_C(0x20074804), UINT32_C(0x70002400), UINT32_C(0x00004ba0), UINT32_C(0x80c80001),
	UINT32_C(0x00088215), UINT32_C(0x0404a040), UINT32_C(0x24013048), UINT32_C(0x40010c08),
	UINT32_C(0x00205112), UINT32_C(0x81200024), UINT32_C(0x080a0840), UINT32_C(0x01004082),
};

template<>
const xormix48::matrix_t xormix48::XORMIX_MATRIX = {
	UINT64_C(0x180010800022), UINT64_C(0x000400100c20), UINT64_C(0xc080020c4000), UINT64_C(0x000000006880),
	UINT64_C(0x009200040040), UINT64_C(0x0000000a0062), UINT64_C(0x00400c000224), UINT64_C(0x082008040004),
	UINT64_C(0x008242c00000), UINT64_C(0x050100003100), UINT64_C(0x140002000888), UINT64_C(0x040240002014),
	UINT64_C(0x200000231500), UINT64_C(0x00002001c002), UINT64_C(0x800001820010), UINT64_C(0x620040000000),
	UINT64_C(0xa04110100000), UINT64_C(0xc00020241010), UINT64_C(0x000001c04008), UINT64_C(0x008408008002),
	UINT64_C(0x600000100005), UINT64_C(0x001080002083), UINT64_C(0x800280012080), UINT64_C(0x040608200000),
	UINT64_C(0x0000a0420800), UINT64_C(0x018002010208), UINT64_C(0x090108000248), UINT64_C(0x000140000a80),
	UINT64_C(0x003000092020), UINT64_C(0x002820800402), UINT64_C(0x880810400800), UINT64_C(0x010280000101),
	UINT64_C(0x000812280040), UINT64_C(0x024001004500), UINT64_C(0x000c05088000), UINT64_C(0x061828000040),
	UINT64_C(0x00a104808000), UINT64_C(0x100090001000), UINT64_C(0x200003000014), UINT64_C(0x102000000029),
	UINT64_C(0x1008000a0080), UINT64_C(0x210000100400), UINT64_C(0x424000008108), UINT64_C(0x080000041200),
	UINT64_C(0x027000300000), UINT64_C(0x000040228010), UINT64_C(0x0a0084000001), UINT64_C(0x000424400200),
};

template<>
const xormix64::matrix_t xormix64::XORMIX_MATRIX = {
	UINT64_C(0x008402000c000000), UINT64_C(0x0880800001000006), UINT64_C(0x01c0000020104004), UINT64_C(0x0240000000012040),
	UINT64_C(0x0030220000004000), UINT64_C(0x4008008800000000), UINT64_C(0x0000000028114200), UINT64_C(0x1801000910000010),
	UINT64_C(0x0000a40080080000), UINT64_C(0x0100808000080080), UINT64_C(0x0018000001048000), UINT64_C(0x0016020000010000),
	UINT64_C(0x0000000012020820), UINT64_C(0x0008002020600400), UINT64_C(0x080008000040a020), UINT64_C(0x0000030803000000),
	UINT64_C(0x0400408088001001), UINT64_C(0x0062000008000004), UINT64_C(0x0208000000001820), UINT64_C(0x0100080000508000),
	UINT64_C(0x8200400082002000), UINT64_C(0x1004100210000800), UINT64_C(0x0020002204040004), UINT64_C(0x000200400200800b),
	UINT64_C(0x0000800041080000), UINT64_C(0x1000188000800100), UINT64_C(0x0000545400000000), UINT64_C(0x8008003000000102),
	UINT64_C(0x80000200a0000020), UINT64_C(0x0100810010000050), UINT64_C(0x0800080040800c00), UINT64_C(0x0200240240000810),
	UINT64_C(0x400000080210000a), UINT64_C(0x0001000320000400), UINT64_C(0x2000082000001200), UINT64_C(0x0000200004203000),
	UINT64_C(0x0000001008020101), UINT64_C(0x1000002004004081), UINT64_C(0x8002000000002090), UINT64_C(0x0145000010000000),
	UINT64_C(0x0082400001600200), UINT64_C(0x0000300000684400), UINT64_C(0x2000000100850048), UINT64_C(0x4402040000000004),
	UINT64_C(0x0000000940100020), UINT64_C(0x04000001000a0008), UINT64_C(0x2000009220000000), UINT64_C(0x0000090004001010),
	UINT64_C(0x4010200200000200), UINT64_C(0x2800004800082000), UINT64_C(0x4000000482060000), UINT64_C(0x04000000c0008020),
	UINT64_C(0x1880000000000282), UINT64_C(0x0001010400220000), UINT64_C(0x0020050000020000), UINT64_C(0x0400401000000101),
	UINT64_C(0x0000020000018440), UINT64_C(0x2244000000000900), UINT64_C(0x0000100408800002), UINT64_C(0x0000000400000288),
	UINT64_C(0xa00000c000200000), UINT64_C(0x0028800000840000), UINT64_C(0x0211002000000040), UINT64_C(0x80a0004000800088),
};

template<>
const xormix96::matrix_t xormix96::XORMIX_MATRIX = {
	UINT64_C(0x000000000110), UINT64_C(0x040000000c00), UINT64_C(0x0800000c4000), UINT64_C(0x000000408000),
	UINT64_C(0x000400a01000), UINT64_C(0x000010004000), UINT64_C(0x000008000000), UINT64_C(0x000005008004),
	UINT64_C(0x010000000001), UINT64_C(0x402000008400), UINT64_C(0x002002000200), UINT64_C(0x400800000000),
	UINT64_C(0x420000800004), UINT64_C(0x200000000000), UINT64_C(0x100001000040), UINT64_C(0x0000000a0000),
	UINT64_C(0x040000010000), UINT64_C(0x000000000046), UINT64_C(0x000001000060), UINT64_C(0x008000024020),
	UINT64_C(0x000000004000), UINT64_C(0x890004040000), UINT64_C(0x000000600004), UINT64_C(0x00000000080a),
	UINT64_C(0x000000008204), UINT64_C(0x000002010008), UINT64_C(0x000000000040), UINT64_C(0x010000000a00),
	UINT64_C(0x200000000010), UINT64_C(0x0000000000c7), UINT64_C(0x000000202000), UINT64_C(0x880000000001),
	UINT64_C(0x400080080008), UINT64_C(0x400001000000), UINT64_C(0x004000002008), UINT64_C(0x080002000000),
	UINT64_C(0x000000020002), UINT64_C(0x041000800001), UINT64_C(0x000404000001), UINT64_C(0x000210000200),
	UINT64_C(0x100000108002), UINT64_C(0x000000000120), UINT64_C(0x000020010400), UINT64_C(0x100024000000),
	UINT64_C(0x000020010000), UINT64_C(0x040400000020), UINT64_C(0x002000109006), UINT64_C(0x000000000000),
	UINT64_C(0x000440004000), UINT64_C(0x000202000000), UINT64_C(0x300000000000), UINT64_C(0x004000280000),
	UINT64_C(0x100000000022), UINT64_C(0x000040000920), UINT64_C(0x000200000080), UINT64_C(0x280000000000),
	UINT64_C(0x000010000041), UINT64_C(0x000000200010), UINT64_C(0x000000420180), UINT64_C(0x000008000000),
	UINT64_C(0x000080020002), UINT64_C(0x0000000a0000), UINT64_C(0x020200200000), UINT64_C(0x000028000000),
	UINT64_C(0x002020000480), UINT64_C(0x800100000000), UINT64_C(0x008100000080), UINT64_C(0x001000040000),
	UINT64_C(0x000001000800), UINT64_C(0x008004008000), UINT64_C(0x411040000000), UINT64_C(0x000080000000),
	UINT64_C(0x020000000060), UINT64_C(0x082010000000), UINT64_C(0x000800000020), UINT64_C(0x020000200008),
	UINT64_C(0x400000006000), UINT64_C(0x004008800040), UINT64_C(0x080000000000), UINT64_C(0x00a042000000),
	UINT64_C(0x004000000008), UINT64_C(0x0040008c0000), UINT64_C(0x280080000000), UINT64_C(0x000008000100),
	UINT64_C(0x000080010000), UINT64_C(0x820000000800), UINT64_C(0x010101100000), UINT64_C(0x000080010000),
	UINT64_C(0x000028000000), UINT64_C(0x100000002004), UINT64_C(0x008004000000), UINT64_C(0x201800100000),
	UINT64_C(0x000000802100), UINT64_C(0x040000020000), UINT64_C(0x220000008000), UINT64_C(0x000040200000),
	UINT64_C(0x042000000000), UINT64_C(0x000000000412), UINT64_C(0x011000000000), UINT64_C(0x080120080000),
	UINT64_C(0x009000040210), UINT64_C(0x000000010000), UINT64_C(0x000400000000), UINT64_C(0x200000003080),
	UINT64_C(0x000008000000), UINT64_C(0x200500000001), UINT64_C(0x008000000000), UINT64_C(0x0020a0010000),
	UINT64_C(0x040002000000), UINT64_C(0x000800000080), UINT64_C(0x000080001001), UINT64_C(0x000001000208),
	UINT64_C(0x000010000120), UINT64_C(0x000000000810), UINT64_C(0x000012000400), UINT64_C(0x000000404000),
	UINT64_C(0x800000080000), UINT64_C(0x002002400000), UINT64_C(0x002040010000), UINT64_C(0x010800820000),
	UINT64_C(0xa00000100200), UINT64_C(0x000000000010), UINT64_C(0x000004200804), UINT64_C(0x000008000000),
	UINT64_C(0x808080000000), UINT64_C(0x0000a0000000), UINT64_C(0x000902002000), UINT64_C(0x010040000000),
	UINT64_C(0x200800040000), UINT64_C(0x040000400140), UINT64_C(0x004000400800), UINT64_C(0x001000001000),
	UINT64_C(0x400000400000), UINT64_C(0x804000000020), UINT64_C(0x000000001000), UINT64_C(0x100501040000),
	UINT64_C(0x800440800000), UINT64_C(0x001000200000), UINT64_C(0x000000080000), UINT64_C(0x220104000000),
	UINT64_C(0x001200800000), UINT64_C(0x000000100008), UINT64_C(0x00000a000000), UINT64_C(0x802020000040),
	UINT64_C(0x010000000800), UINT64_C(0x020000000202), UINT64_C(0x000008022000), UINT64_C(0x020000002000),
	UINT64_C(0x000800c00000), UINT64_C(0x000000110000), UINT64_C(0x080200000500), UINT64_C(0x000000000080),
	UINT64_C(0x800000000018), UINT64_C(0x000000002400), UINT64_C(0x820801000000), UINT64_C(0x10000000c000),
	UINT64_C(0x000100008000), UINT64_C(0x018000084000), UINT64_C(0x000008040000), UINT64_C(0x000000440210),
	UINT64_C(0x002040020000), UINT64_C(0x000400201020), UINT64_C(0x000020200082), UINT64_C(0x000200000000),
	UINT64_C(0x000000000201), UINT64_C(0x000212000001), UINT64_C(0x180000000000), UINT64_C(0x008000900000),
	UINT64_C(0x080014001000), UINT64_C(0x420200000000), UINT64_C(0x020300080000), UINT64_C(0x000000000200),
	UINT64_C(0x001000000888), UINT64_C(0x000000102000), UINT64_C(0x000000000000), UINT64_C(0x008480020000),
	UINT64_C(0x000000028000), UINT64_C(0x400000800002), UINT64_C(0x040220000008), UINT64_C(0x000800002100),
	UINT64_C(0x004000080800), UINT64_C(0x000010000400), UINT64_C(0x000000040000), UINT64_C(0x000800008084),
	UINT64_C(0x00c000104000), UINT64_C(0x000000001000), UINT64_C(0x000014000020), UINT64_C(0x000008000080),
	UINT64_C(0x040800000010), UINT64_C(0x0040c1000000), UINT64_C(0x000002000600), UINT64_C(0x100200001008),
};

template<>
const xormix128::matrix_t xormix128::XORMIX_MATRIX = {
	UINT64_C(0x0000400040000000), UINT64_C(0x0022400000000800), UINT64_C(0x0000080000000000), UINT64_C(0x0100000000403000),
	UINT64_C(0x4000040000000010), UINT64_C(0x0000000004042000), UINT64_C(0x0000040000800000), UINT64_C(0x0000201000000800),
	UINT64_C(0x0004000000020000), UINT64_C(0x0000004100800010), UINT64_C(0x0100000000008000), UINT64_C(0x0080800004004000),
	UINT64_C(0x0000000000004104), UINT64_C(0x0000020100000000), UINT64_C(0x0000200008000001), UINT64_C(0x0000200000000020),
	UINT64_C(0x0000080000000000), UINT64_C(0x0002001020000800), UINT64_C(0x0008000100000004), UINT64_C(0x000040000c000000),
	UINT64_C(0x0040000004108100), UINT64_C(0x0020000000000000), UINT64_C(0x0000000000000030), UINT64_C(0x0000100300000000),
	UINT64_C(0x0028000000004080), UINT64_C(0x0000020000000000), UINT64_C(0x1000000200000000), UINT64_C(0x4002000400000000),
	UINT64_C(0x0000000010020010), UINT64_C(0x0100000000004000), UINT64_C(0x2000000010000000), UINT64_C(0x0022040000000000),
	UINT64_C(0x0000006000000800), UINT64_C(0x0000020008000040), UINT64_C(0x0000000002022000), UINT64_C(0x0004002100000000),
	UINT64_C(0x0000100000024000), UINT64_C(0x1020000000000004), UINT64_C(0x0000020000400000), UINT64_C(0x2000000020004000),
	UINT64_C(0x0000002000000200), UINT64_C(0x0200000000201000), UINT64_C(0x2000800000000000), UINT64_C(0x0008000800008008),
	UINT64_C(0x0000000028000000), UINT64_C(0x0880000002000080), UINT64_C(0x0000000000008000), UINT64_C(0x00000028008a0000),
	UINT64_C(0x1012040000200000), UINT64_C(0x0000000000011000), UINT64_C(0x0094082000000000), UINT64_C(0x0000000000000000),
	UINT64_C(0x0028020000000000), UINT64_C(0x0010000400000008), UINT64_C(0x0000008000000020), UINT64_C(0x0200200000200000),
	UINT64_C(0x0000020010210000), UINT64_C(0x0000000200000000), UINT64_C(0x2000000004000000), UINT64_C(0x0000000010008040),
	UINT64_C(0x0208000000000000), UINT64_C(0x0000000000000a04), UINT64_C(0x0900008000000000), UINT64_C(0x0000026000080000),
	UINT64_C(0x4490200000000000), UINT64_C(0x0000000000000000), UINT64_C(0x0000000320000000), UINT64_C(0x0000400000020000),
	UINT64_C(0x0000000020000004), UINT64_C(0x0080000200001000), UINT64_C(0x0000400000000000), UINT64_C(0x1200020000000084),
	UINT64_C(0x0002080000008000), UINT64_C(0x0000000802000008), UINT64_C(0x0000001900000000), UINT64_C(0x0000000000000500),
	UINT64_C(0x0000000002000410), UINT64_C(0x0400400000100000), UINT64_C(0x0200000800000000), UINT64_C(0x0000040000a00000),
	UINT64_C(0x1000000000000008), UINT64_C(0x0000814000800000), UINT64_C(0x0000000000000202), UINT64_C(0x0000000002000030),
	UINT64_C(0x0000001000000400), UINT64_C(0x0009000000000004), UINT64_C(0x0020000280000000), UINT64_C(0x0000000000000402),
	UINT64_C(0x0000000400000001), UINT64_C(0x0844000000000000), UINT64_C(0x0000100000400000), UINT64_C(0x4000000000080002),
	UINT64_C(0x0000800000000004), UINT64_C(0x5000200008000000), UINT64_C(0x00000000000040a0), UINT64_C(0x0400000000000200),
	UINT64_C(0x0000140000000000), UINT64_C(0x0100000000104000), UINT64_C(0x0000000400000000), UINT64_C(0x20000000005c0000),
	UINT64_C(0x0080000000000000), UINT64_C(0x0200000000840000), UINT64_C(0x0100000010802000), UINT64_C(0x0000000020000000),
	UINT64_C(0x0080020000400000), UINT64_C(0x0000000002000001), UINT64_C(0x4000004000000000), UINT64_C(0x0200010000000400),
	UINT64_C(0x0000000004010000), UINT64_C(0x0800804000000000), UINT64_C(0x8000000000800002), UINT64_C(0x0008000000000100),
	UINT64_C(0x0060000000090020), UINT64_C(0x0000000000080000), UINT64_C(0x0000000000000100), UINT64_C(0x0600001080000000),
	UINT64_C(0x2200000040020008), UINT64_C(0x8000000000000020), UINT64_C(0x0002400000000801), UINT64_C(0x1000000000000400),
	UINT64_C(0x00800000400a0000), UINT64_C(0x0010080000000000), UINT64_C(0x0800080020000000), UINT64_C(0x0000000000020100),
	UINT64_C(0x0000300080002000), UINT64_C(0x0000000010002000), UINT64_C(0x0020000280000102), UINT64_C(0x0800000000000000),
	UINT64_C(0x0001000008000400), UINT64_C(0x0000000001000080), UINT64_C(0x0001000080200040), UINT64_C(0x0000008000000000),
	UINT64_C(0x0000480050010000), UINT64_C(0x0000000000000000), UINT64_C(0x2001000800000000), UINT64_C(0x8020000000200000),
	UINT64_C(0x0200000001000800), UINT64_C(0x8004002000000000), UINT64_C(0x0400000000050000), UINT64_C(0x2800000000000000),
	UINT64_C(0x0002000000200001), UINT64_C(0x0040108000000000), UINT64_C(0x8080002000000000), UINT64_C(0x0000000001000800),
	UINT64_C(0x0000000800200000), UINT64_C(0x0800040010000000), UINT64_C(0x0000000001080000), UINT64_C(0x0000000800010002),
	UINT64_C(0x0401000000001200), UINT64_C(0x0000000001000080), UINT64_C(0x0000001100000200), UINT64_C(0x0000800004000000),
	UINT64_C(0x0000010000001002), UINT64_C(0x0100001020000000), UINT64_C(0x0000110080001000), UINT64_C(0x0100040000000000),
	UINT64_C(0x0000200000000008), UINT64_C(0x0000008000028000), UINT64_C(0x0100000000000040), UINT64_C(0x0010010000088000),
	UINT64_C(0x0000000000041000), UINT64_C(0x00000000a0900000), UINT64_C(0x0800010000000000), UINT64_C(0x0088200000000000),
	UINT64_C(0x0000000408100800), UINT64_C(0x0000000400000040), UINT64_C(0x0002000200080000), UINT64_C(0x000a800000000000),
	UINT64_C(0x0000000100040000), UINT64_C(0x0000080010000004), UINT64_C(0x0008010000040000), UINT64_C(0x0080000200000002),
	UINT64_C(0x0000000000000020), UINT64_C(0x0005080200002200), UINT64_C(0x0610000000000200), UINT64_C(0x8000000000420000),
	UINT64_C(0x0000000000800000), UINT64_C(0x1000402040000000), UINT64_C(0x4000210000200010), UINT64_C(0x0010000000000000),
	UINT64_C(0x0000200000000100), UINT64_C(0x0008008000002008), UINT64_C(0x0800000020000000), UINT64_C(0x0001008040000000),
	UINT64_C(0x0000000000000480), UINT64_C(0x0000000040000110), UINT64_C(0x0008800000040000), UINT64_C(0x8000000080000000),
	UINT64_C(0x0000800000000802), UINT64_C(0x0020100000000200), UINT64_C(0x4000009001000000), UINT64_C(0x0000000021000000),
	UINT64_C(0x0000006000000000), UINT64_C(0xc400000000000000), UINT64_C(0x0804000000000000), UINT64_C(0x2000040000400000),
	UINT64_C(0x0800000000000080), UINT64_C(0x2000008000020000), UINT64_C(0x0000000000002401), UINT64_C(0x0000180000000001),
	UINT64_C(0x8000000000080048), UINT64_C(0x0000100000200000), UINT64_C(0x8000000004000004), UINT64_C(0x0000800000000002),
	UINT64_C(0x0004000000102000), UINT64_C(0x0000000401000001), UINT64_C(0x0000000000000000), UINT64_C(0x0004021000012000),
	UINT64_C(0x0000000008008000), UINT64_C(0x0080000082000000), UINT64_C(0x0200000c00000800), UINT64_C(0x0003000008000000),
	UINT64_C(0x2400008000000000), UINT64_C(0x0000000080010050), UINT64_C(0x0004004040000000), UINT64_C(0x0000210000000000),
	UINT64_C(0x0000001028000008), UINT64_C(0x0000000000008000), UINT64_C(0x0000020000000040), UINT64_C(0x0000000040300000),
	UINT64_C(0x0000000204000200), UINT64_C(0x0000000000000050), UINT64_C(0x0000000002800000), UINT64_C(0x0001000080000200),
	UINT64_C(0x0001804000408000), UINT64_C(0x0000000010000000), UINT64_C(0x0000028000000000), UINT64_C(0x0040000102001000),
	UINT64_C(0x1000000000100000), UINT64_C(0x0000004000010001), UINT64_C(0x0012000000000020), UINT64_C(0x2000000000000002),
	UINT64_C(0x0000400000800000), UINT64_C(0x0010000000040100), UINT64_C(0x8100040400000000), UINT64_C(0x0000000208000000),
	UINT64_C(0x8040000001004000), UINT64_C(0x4000000000008800), UINT64_C(0x0040008801000000), UINT64_C(0x000000000c004000),
	UINT64_C(0x0000000000080000), UINT64_C(0x0400010c00000000), UINT64_C(0x0020000002000002), UINT64_C(0x0040000000040000),
	UINT64_C(0x1040000002000000), UINT64_C(0x0000000800000080), UINT64_C(0x0000000000001080), UINT64_C(0x00000000000000a1),
	UINT64_C(0x0000000000400040), UINT64_C(0x0000080000000220), UINT64_C(0x0000002000000000), UINT64_C(0x0040080000400400),
	UINT64_C(0x0000800002100080), UINT64_C(0x0000002040000008), UINT64_C(0x0000000080002008), UINT64_C(0x0000000000000028),
};

template<>
const xormix16::matrix_t xormix16::XORMIX_MATRIX_RA = {
	UINT16_C(0xa306), UINT16_C(0x8073), UINT16_C(0xa481), UINT16_C(0x3218),
	UINT16_C(0x0c6c), UINT16_C(0x6922), UINT16_C(0xc338), UINT16_C(0x0e82),
	UINT16_C(0x85c0), UINT16_C(0x5a08), UINT16_C(0x7012), UINT16_C(0x0479),
	UINT16_C(0x2ac4), UINT16_C(0xd081), UINT16_C(0x18a5), UINT16_C(0x010e),
};

template<>
const xormix24::matrix_t xormix24::XORMIX_MATRIX_RA = {
	UINT32_C(0x804112), UINT32_C(0x030483), UINT32_C(0x282068), UINT32_C(0x058010),
	UINT32_C(0x184087), UINT32_C(0x092028), UINT32_C(0x300301), UINT32_C(0x20024d),
	UINT32_C(0x409240), UINT32_C(0x805408), UINT32_C(0x0c0a01), UINT32_C(0x100c48),
	UINT32_C(0x610464), UINT32_C(0x202402), UINT32_C(0x4a8114), UINT32_C(0x026080),
	UINT32_C(0xc22a00), UINT32_C(0x022032), UINT32_C(0x008902), UINT32_C(0x0401a4),
	UINT32_C(0x8e0220), UINT32_C(0x309888), UINT32_C(0x915880), UINT32_C(0xc49010),
};

template<>
const xormix32::matrix_t xormix32::XORMIX_MATRIX_RA = {
	UINT32_C(0x940a0001), UINT32_C(0x00820283), UINT32_C(0x90005014), UINT32_C(0x00005a20),
	UINT32_C(0x90840212), UINT32_C(0x68102000), UINT32_C(0x01200d03), UINT32_C(0x44400014),
	UINT32_C(0x85042100), UINT32_C(0x000c4050), UINT32_C(0x80388880), UINT32_C(0x01062400),
	UINT32_C(0x26018000), UINT32_C(0x02c00102), UINT32_C(0x2044a044), UINT32_C(0x18010c00),
	UINT32_C(0x02300088), UINT32_C(0x20a02080), UINT32_C(0x40218041), UINT32_C(0x08008808),
	UINT32_C(0x0000602a), UINT32_C(0x21020288), UINT32_C(0x02001520), UINT32_C(0x12000600),
	UINT32_C(0x48000824), UINT32_C(0x0c1a0000), UINT32_C(0x004810a2), UINT32_C(0x08214008),
	UINT32_C(0xc1800060), UINT32_C(0x00c18009), UINT32_C(0x201a0040), UINT32_C(0x02001314),
};

template<>
const xormix48::matrix_t xormix48::XORMIX_MATRIX_RA = {
	UINT64_C(0x308480000000), UINT64_C(0x000802140010), UINT64_C(0x100488000080), UINT64_C(0x044040004006),
	UINT64_C(0x042200000900), UINT64_C(0x0006a0008000), UINT64_C(0x000000822050), UINT64_C(0x080008020804),
	UINT64_C(0x022204000002), UINT64_C(0x00240000610c), UINT64_C(0x200033000000), UINT64_C(0x202800200010),
	UINT64_C(0x820020120000), UINT64_C(0x480000000128), UINT64_C(0x024080200200), UINT64_C(0x280908800000),
	UINT64_C(0x002000011488), UINT64_C(0x00000c100460), UINT64_C(0x080224018000), UINT64_C(0x010000c08820),
	UINT64_C(0x003008c00000), UINT64_C(0x41800000c010), UINT64_C(0x000030086011), UINT64_C(0x080800410880),
	UINT64_C(0xd08200000000), UINT64_C(0x009080000280), UINT64_C(0x420100022200), UINT64_C(0x040005000028),
	UINT64_C(0x010002003220), UINT64_C(0x010102001202), UINT64_C(0x020150000004), UINT64_C(0x000810080006),
	UINT64_C(0x001002080802), UINT64_C(0x040000481001), UINT64_C(0x000040028080), UINT64_C(0x101008004400),
	UINT64_C(0x000000800981), UINT64_C(0x008001250042), UINT64_C(0x200100041400), UINT64_C(0x000801142400),
	UINT64_C(0x004200200108), UINT64_C(0x801400010220), UINT64_C(0x81c041000008), UINT64_C(0x220040380040),
	UINT64_C(0x8000002a0001), UINT64_C(0x180082840000), UINT64_C(0x444024000040), UINT64_C(0x800010408001),
};

template<>
const xormix64::matrix_t xormix64::XORMIX_MATRIX_RA = {
	UINT64_C(0x1000002860000402), UINT64_C(0x0a000000400a1000), UINT64_C(0x0020000201800080), UINT64_C(0x0002204020500000),
	UINT64_C(0x0940000008200001), UINT64_C(0x0049020200000800), UINT64_C(0x0100420000140000), UINT64_C(0x000300c000000004),
	UINT64_C(0x0000801000020108), UINT64_C(0x0200800000000811), UINT64_C(0x0000014840008000), UINT64_C(0x0400045000020000),
	UINT64_C(0x0080408800440000), UINT64_C(0x8000000114006000), UINT64_C(0x0001200490000004), UINT64_C(0x0010140200010120),
	UINT64_C(0x0008020080002400), UINT64_C(0x0082001300080000), UINT64_C(0x2000000100240004), UINT64_C(0x0090810000000200),
	UINT64_C(0x0010000002801001), UINT64_C(0x0108200008000400), UINT64_C(0x8420000000200040), UINT64_C(0x0104040082000000),
	UINT64_C(0x24000100a0480000), UINT64_C(0x1104010000001040), UINT64_C(0x20040001000000a0), UINT64_C(0x0000181400101000),
	UINT64_C(0x0082010000200880), UINT64_C(0x802000c402000000), UINT64_C(0x0020000020004208), UINT64_C(0x2200080000890000),
	UINT64_C(0x0000000831000202), UINT64_C(0x0004083000002002), UINT64_C(0x0000040200028018), UINT64_C(0x0402008004020002),
	UINT64_C(0x0084242000000800), UINT64_C(0x0000000010201050), UINT64_C(0x800200000001004c), UINT64_C(0x00a0400420400000),
	UINT64_C(0x8000108004000020), UINT64_C(0x00001a0080000011), UINT64_C(0x0620000202000000), UINT64_C(0x0208000008040400),
	UINT64_C(0x8040400002000022), UINT64_C(0x0000802808080010), UINT64_C(0x2000000000002205), UINT64_C(0x0010000005040102),
	UINT64_C(0x1800000800408000), UINT64_C(0x0040000040804040), UINT64_C(0x600000008000a000), UINT64_C(0x4009000040800200),
	UINT64_C(0x0000200011200180), UINT64_C(0x0000800000818080), UINT64_C(0x0040000000002128), UINT64_C(0x0000c0000008c800),
	UINT64_C(0x02001000000100a0), UINT64_C(0x0800002009000200), UINT64_C(0x0008288004000000), UINT64_C(0x4010000400100400),
	UINT64_C(0x4800000000020800), UINT64_C(0x10000a0102000000), UINT64_C(0x0000022000104008), UINT64_C(0x5801000008000000),
};

template<>
const xormix96::matrix_t xormix96::XORMIX_MATRIX_RA = {
	UINT64_C(0x002000100008), UINT64_C(0x010800000000), UINT64_C(0x000002008000), UINT64_C(0x000020000060),
	UINT64_C(0x000002100020), UINT64_C(0x000000018000), UINT64_C(0x020000041000), UINT64_C(0x000000000c00),
	UINT64_C(0x800000800a10), UINT64_C(0x080000000080), UINT64_C(0x000800400000), UINT64_C(0x000200480040),
	UINT64_C(0x000800000000), UINT64_C(0x000500000800), UINT64_C(0x001000800018), UINT64_C(0x000000000100),
	UINT64_C(0x400040000804), UINT64_C(0x081000200000), UINT64_C(0x000004010082), UINT64_C(0x000004000200),
	UINT64_C(0x000120000800), UINT64_C(0xa00000000002), UINT64_C(0x00c000000010), UINT64_C(0x000200080000),
	UINT64_C(0x004100010001), UINT64_C(0x000000200000), UINT64_C(0x208c08000000), UINT64_C(0x020000000000),
	UINT64_C(0x003010000000), UINT64_C(0x000002800000), UINT64_C(0x000000800040), UINT64_C(0x000010802000),
	UINT64_C(0x000000040040), UINT64_C(0x901000000800), UINT64_C(0x008000200140), UINT64_C(0x000000000002),
	UINT64_C(0x040000008800), UINT64_C(0x004000000004), UINT64_C(0x000000000000), UINT64_C(0x200840440202),
	UINT64_C(0x424200002000), UINT64_C(0x008000000020), UINT64_C(0x000000400000), UINT64_C(0x200000100080),
	UINT64_C(0x8000800c0020), UINT64_C(0x000000002000), UINT64_C(0x000040000000), UINT64_C(0x900080008080),
	UINT64_C(0x000220000080), UINT64_C(0x000011000000), UINT64_C(0x000c00000042), UINT64_C(0x000000002040),
	UINT64_C(0x000000000000), UINT64_C(0x400040140002), UINT64_C(0x000000080104), UINT64_C(0x000004000040),
	UINT64_C(0x000004000001), UINT64_C(0x040000828000), UINT64_C(0x000000010080), UINT64_C(0x400000001001),
	UINT64_C(0x000800000a00), UINT64_C(0x008000000204), UINT64_C(0x000000400008), UINT64_C(0x080200040000),
	UINT64_C(0x002048000000), UINT64_C(0x040002000000), UINT64_C(0x068000000000), UINT64_C(0x000210800000),
	UINT64_C(0x000090000000), UINT64_C(0x020800101000), UINT64_C(0x000000004480), UINT64_C(0x000042000000),
	UINT64_C(0x000200080000), UINT64_C(0x060000402000), UINT64_C(0x000010800000), UINT64_C(0x000003010000),
	UINT64_C(0x800002000000), UINT64_C(0x010009020000), UINT64_C(0x000020002000), UINT64_C(0x000e00000000),
	UINT64_C(0x180000000000), UINT64_C(0x000028008000), UINT64_C(0x000000010000), UINT64_C(0x130008000012),
	UINT64_C(0x000800000000), UINT64_C(0x000000884001), UINT64_C(0x020000021000), UINT64_C(0x010080000000),
	UINT64_C(0x800000000200), UINT64_C(0x000800001180), UINT64_C(0x002000201000), UINT64_C(0x000100000010),
	UINT64_C(0x000440080000), UINT64_C(0x100000000400), UINT64_C(0x001000212000), UINT64_C(0x001400000000),
	UINT64_C(0x020140000200), UINT64_C(0x000000000204), UINT64_C(0x000400000405), UINT64_C(0x000800000004),
	UINT64_C(0x000000084000), UINT64_C(0x002100010000), UINT64_C(0x000001000000), UINT64_C(0xc08100000000),
	UINT64_C(0x208010000000), UINT64_C(0x000008000020), UINT64_C(0x410200004002), UINT64_C(0x000000000400),
	UINT64_C(0x010000000000), UINT64_C(0x040000004108), UINT64_C(0x000001020020), UINT64_C(0x200000120000),
	UINT64_C(0x000008001010), UINT64_C(0x000000000408), UINT64_C(0x000081000000), UINT64_C(0x200001020000),
	UINT64_C(0x000000400010), UINT64_C(0x004000020080), UINT64_C(0x000000200000), UINT64_C(0x000080100410),
	UINT64_C(0x140000400000), UINT64_C(0x009010000000), UINT64_C(0x000020080000), UINT64_C(0x004000000020),
	UINT64_C(0x002080200400), UINT64_C(0x000000001080), UINT64_C(0x000000000000), UINT64_C(0x002440080800),
	UINT64_C(0x000000205002), UINT64_C(0x000020000240), UINT64_C(0x006000000000), UINT64_C(0x080020008000),
	UINT64_C(0x100000002001), UINT64_C(0x000004004000), UINT64_C(0x80000000000c), UINT64_C(0x104000000000),
	UINT64_C(0x00800002c000), UINT64_C(0x000000001000), UINT64_C(0x080000000000), UINT64_C(0x82a000000010),
	UINT64_C(0x000000000400), UINT64_C(0x400404800000), UINT64_C(0x000100000002), UINT64_C(0x002000040010),
	UINT64_C(0x000008000000), UINT64_C(0x400080408000), UINT64_C(0x040080040000), UINT64_C(0x000000202000),
	UINT64_C(0x030000800000), UINT64_C(0x000020004000), UINT64_C(0x000083020080), UINT64_C(0x000000000100),
	UINT64_C(0x290020000000), UINT64_C(0x000080000000), UINT64_C(0x001300028000), UINT64_C(0x800000000000),
	UINT64_C(0x000400020000), UINT64_C(0x002002002000), UINT64_C(0x000000102008), UINT64_C(0x000000000024),
	UINT64_C(0x080000800000), UINT64_C(0x000000404009), UINT64_C(0x040002100104), UINT64_C(0x000000010000),
	UINT64_C(0x004004000000), UINT64_C(0x082080200000), UINT64_C(0x000000000101), UINT64_C(0x080004000008),
	UINT64_C(0x080000002440), UINT64_C(0x010000000000), UINT64_C(0x200004000900), UINT64_C(0x000220000000),
	UINT64_C(0x100000000208), UINT64_C(0x005000040001), UINT64_C(0x400030040020), UINT64_C(0x000000000001),
	UINT64_C(0x010008000020), UINT64_C(0x000000080200), UINT64_C(0x000000100000), UINT64_C(0x000008280808),
	UINT64_C(0x000001000080), UINT64_C(0x000040000820), UINT64_C(0x40020a000002), UINT64_C(0x020000000008),
	UINT64_C(0x100000008200), UINT64_C(0x040002020000), UINT64_C(0x280000000000), UINT64_C(0x008109000000),
	UINT64_C(0xa00000000020), UINT64_C(0x200010010000), UINT64_C(0x001004008000), UINT64_C(0x000000200102),
};

template<>
const xormix128::matrix_t xormix128::XORMIX_MATRIX_RA = {
	UINT64_C(0x0820000000000000), UINT64_C(0x0000090000040000), UINT64_C(0x0000010000004002), UINT64_C(0x0000002200000000),
	UINT64_C(0x0800000000401000), UINT64_C(0x0001000004000008), UINT64_C(0x0500000000000000), UINT64_C(0x0202800000004000),
	UINT64_C(0x1020080000000000), UINT64_C(0x0000000040000008), UINT64_C(0x4000010008000100), UINT64_C(0x1000000000040010),
	UINT64_C(0x0000000000900000), UINT64_C(0x1000000200100000), UINT64_C(0x0000004000040000), UINT64_C(0x0000008804000000),
	UINT64_C(0x0070020000000000), UINT64_C(0x0008100000000000), UINT64_C(0x0000000000008000), UINT64_C(0x0000000014200004),
	UINT64_C(0x0000001000000008), UINT64_C(0x0001000800000001), UINT64_C(0x0000001000000028), UINT64_C(0x4000000000000020),
	UINT64_C(0x0000300000001000), UINT64_C(0x0000000040000000), UINT64_C(0x0000000010000008), UINT64_C(0x0100020848000000),
	UINT64_C(0x2100000800000000), UINT64_C(0x0000000200000001), UINT64_C(0x0004000000000400), UINT64_C(0x0080000000010400),
	UINT64_C(0x0040000010000000), UINT64_C(0x0000008022000002), UINT64_C(0x0000000800040000), UINT64_C(0xa000000000080000),
	UINT64_C(0x0002800000080000), UINT64_C(0x0000000000084000), UINT64_C(0x0000000000010000), UINT64_C(0x0200000000401003),
	UINT64_C(0x0808200200a00000), UINT64_C(0x0080000000000000), UINT64_C(0x0100008000001000), UINT64_C(0x0040800000000000),
	UINT64_C(0x4000000180000000), UINT64_C(0x0800000000000800), UINT64_C(0x2000210000000000), UINT64_C(0x0000000000020040),
	UINT64_C(0x0000000000100000), UINT64_C(0x1000004010000020), UINT64_C(0x0001000000104000), UINT64_C(0x0000000180000000),
	UINT64_C(0x0000400000000200), UINT64_C(0x0804200000000000), UINT64_C(0x0000000001020004), UINT64_C(0x0000008000200000),
	UINT64_C(0x0000012000011010), UINT64_C(0x0002000000000000), UINT64_C(0x0800000000000120), UINT64_C(0x0000000000820000),
	UINT64_C(0x0010000000000000), UINT64_C(0x00008004a0000000), UINT64_C(0x0000082000000800), UINT64_C(0x0000000400001000),
	UINT64_C(0x0000000102000800), UINT64_C(0x0000000000800002), UINT64_C(0x0000040000008000), UINT64_C(0x4000000008300000),
	UINT64_C(0x8000000001000000), UINT64_C(0x0002000080400000), UINT64_C(0x0001000100000004), UINT64_C(0x4000000100002000),
	UINT64_C(0x0000000028000000), UINT64_C(0x0404000400000002), UINT64_C(0x0000000000002080), UINT64_C(0x0000200020080001),
	UINT64_C(0x0008000000000000), UINT64_C(0x801000020000c400), UINT64_C(0x0000802000040022), UINT64_C(0x0000000000000010),
	UINT64_C(0x0080800000540000), UINT64_C(0x0000000000000001), UINT64_C(0x8004000000020010), UINT64_C(0x0010000100000000),
	UINT64_C(0x0040000000000000), UINT64_C(0x0020000100010800), UINT64_C(0x0020000020000000), UINT64_C(0x0010080000000400),
	UINT64_C(0x0000000200200000), UINT64_C(0x2000000000000900), UINT64_C(0x0000000020000000), UINT64_C(0x0000200200000280),
	UINT64_C(0x0020400000000004), UINT64_C(0x0c00040000000000), UINT64_C(0x0000000000000000), UINT64_C(0x2000808000002080),
	UINT64_C(0x0800000000000480), UINT64_C(0x0000000000000220), UINT64_C(0x10030000000000c0), UINT64_C(0x0080000000100000),
	UINT64_C(0x0000002280000000), UINT64_C(0x0000002001000000), UINT64_C(0x0000020000000000), UINT64_C(0x0000820000820000),
	UINT64_C(0x0000000000080000), UINT64_C(0x0000405080000000), UINT64_C(0x0000000004002060), UINT64_C(0x0000000008000010),
	UINT64_C(0x0080000004000004), UINT64_C(0x0000400000020000), UINT64_C(0x0090000000001000), UINT64_C(0x0000000000200080),
	UINT64_C(0x0000008000210002), UINT64_C(0x0800020000000800), UINT64_C(0x0802001800000000), UINT64_C(0x0000002000000800),
	UINT64_C(0x1004800010000000), UINT64_C(0x0000000000008100), UINT64_C(0x2000200020020800), UINT64_C(0x0000000000000000),
	UINT64_C(0x0040000000000000), UINT64_C(0x0012240000800020), UINT64_C(0x0000020010000080), UINT64_C(0x0000000000002200),
	UINT64_C(0x0002000000200004), UINT64_C(0x000008000000000a), UINT64_C(0x0000000008000410), UINT64_C(0x0000004000000400),
	UINT64_C(0x0002000400100000), UINT64_C(0x0100001000000008), UINT64_C(0x0000004000000010), UINT64_C(0x0200000000000010),
	UINT64_C(0x0080000100000000), UINT64_C(0x0000050001000000), UINT64_C(0x0082000000000000), UINT64_C(0x0008000003000000),
	UINT64_C(0x0008000000008000), UINT64_C(0x0400000022010000), UINT64_C(0x0000203000090002), UINT64_C(0x0000000000000000),
	UINT64_C(0x0000020000008040), UINT64_C(0x8001008010000000), UINT64_C(0x0000000800000100), UINT64_C(0x0024008040000000),
	UINT64_C(0x4000000000000000), UINT64_C(0x0001000802040000), UINT64_C(0x8000020000400000), UINT64_C(0x0000002000800080),
	UINT64_C(0x0400040800000000), UINT64_C(0x0000100800000000), UINT64_C(0x2000400000008100), UINT64_C(0x0000000000010000),
	UINT64_C(0x4000048002000020), UINT64_C(0x0000000000000040), UINT64_C(0x0000000020000000), UINT64_C(0x0100800000000404),
	UINT64_C(0x0000000040004900), UINT64_C(0x0000080001000000), UINT64_C(0x1000040002000000), UINT64_C(0x0020000000200000),
	UINT64_C(0x0080000000000002), UINT64_C(0x0004040000200000), UINT64_C(0x00000000c0200000), UINT64_C(0x0200080000000000),
	UINT64_C(0x0000100002000080), UINT64_C(0x000a000000020000), UINT64_C(0x0030080000000000), UINT64_C(0x0000020000082000),
	UINT64_C(0x0000008000020000), UINT64_C(0x0000040001000040), UINT64_C(0x8000000004800000), UINT64_C(0x0020000400008000),
	UINT64_C(0x0000080801000000), UINT64_C(0x2088000000000000), UINT64_C(0x2018400000010010), UINT64_C(0x0000000000000800),
	UINT64_C(0x0200000000000000), UINT64_C(0x0040000080008100), UINT64_C(0x1001100000000001), UINT64_C(0x0000000040000040),
	UINT64_C(0x0000080000000008), UINT64_C(0x0900000000000200), UINT64_C(0x000000c400000000), UINT64_C(0x0000002000000200),
	UINT64_C(0x0000000000000000), UINT64_C(0x0008000008060002), UINT64_C(0x0000000000008a00), UINT64_C(0x0000000000882000),
	UINT64_C(0x0000000018000000), UINT64_C(0x0000101000004000), UINT64_C(0x0200001084000000), UINT64_C(0x4000000002000200),
	UINT64_C(0x2100000000000000), UINT64_C(0x0000401000000020), UINT64_C(0x0000800080040200), UINT64_C(0x0000000002000000),
	UINT64_C(0x0000004000004000), UINT64_C(0x0080004000000004), UINT64_C(0x0200000248800200), UINT64_C(0x0000400000000000),
	UINT64_C(0x0000002102000001), UINT64_C(0x0100000000000108), UINT64_C(0x0208040000004000), UINT64_C(0x1000000000001000),
	UINT64_C(0x0000000400000001), UINT64_C(0x0400000000400010), UINT64_C(0x0000010001080000), UINT64_C(0x4000000000008000),
	UINT64_C(0x0000000000080200), UINT64_C(0x0002010200010000), UINT64_C(0x4000000000880000), UINT64_C(0x040000000c000000),
	UINT64_C(0x0004000000020202), UINT64_C(0x0800080000000000), UINT64_C(0x0400000400000000), UINT64_C(0x0001200000000100),
	UINT64_C(0x8000104001000000), UINT64_C(0x1000000800000000), UINT64_C(0x0000000002c02001), UINT64_C(0x0040000000000000),
	UINT64_C(0x00002000400020a0), UINT64_C(0x0000000000100000), UINT64_C(0x0008000000000800), UINT64_C(0x0000200004180000),
	UINT64_C(0x0200000080000440), UINT64_C(0x0000000008000000), UINT64_C(0x0000000040002000), UINT64_C(0x2000010000000020),
	UINT64_C(0x0000080000000000), UINT64_C(0x0000000110400004), UINT64_C(0x0000000200020008), UINT64_C(0x8000000020000000),
	UINT64_C(0x0100000204000000), UINT64_C(0x0020100000000000), UINT64_C(0x0000800008000000), UINT64_C(0x0084000000008000),
	UINT64_C(0x8000000000000000), UINT64_C(0x001000000040200c), UINT64_C(0x0000400000000440), UINT64_C(0x0000002010000000),
	UINT64_C(0x0000108000002000), UINT64_C(0x0000014000001000), UINT64_C(0x0400000000400008), UINT64_C(0x0240000000000000),
	UINT64_C(0x0000000000200000), UINT64_C(0x8000120080001000), UINT64_C(0x0000020000000000), UINT64_C(0x8200021000000000),
	UINT64_C(0x0200000000000000), UINT64_C(0x0040000420004000), UINT64_C(0x0001000000000000), UINT64_C(0x00004000000400c0),
	UINT64_C(0x0444000000000000), UINT64_C(0x0020000000000080), UINT64_C(0x0000000420000001), UINT64_C(0x2008000000000000),
};

template<>
const xormix16::word_t xormix16::XORMIX_SALTS[16] = {
	UINT16_C(0xd2ba), UINT16_C(0xbc36), UINT16_C(0x16a6), UINT16_C(0xe3eb),
	UINT16_C(0xb749), UINT16_C(0x5bc4), UINT16_C(0x09f7), UINT16_C(0xf491),
	UINT16_C(0x5e28), UINT16_C(0x2d5a), UINT16_C(0xda5d), UINT16_C(0x2cab),
	UINT16_C(0x4058), UINT16_C(0x7547), UINT16_C(0xe94c), UINT16_C(0x0a05),
};

template<>
const xormix24::word_t xormix24::XORMIX_SALTS[24] = {
	UINT32_C(0xd96a94), UINT32_C(0x8c3c8d), UINT32_C(0xb8b710), UINT32_C(0x112b89),
	UINT32_C(0x6aaf55), UINT32_C(0x295e05), UINT32_C(0xa64b72), UINT32_C(0x39b1db),
	UINT32_C(0x5c5955), UINT32_C(0x915302), UINT32_C(0x040da6), UINT32_C(0xe79f3f),
	UINT32_C(0xf52624), UINT32_C(0xce7aee), UINT32_C(0x74c90b), UINT32_C(0x00c73d),
	UINT32_C(0x1cee53), UINT32_C(0xeb76b1), UINT32_C(0x271093), UINT32_C(0x73ac8e),
	UINT32_C(0x57622b), UINT32_C(0xbf29d0), UINT32_C(0x02efea), UINT32_C(0xa1befc),
};

template<>
const xormix32::word_t xormix32::XORMIX_SALTS[32] = {
	UINT32_C(0x198f8d32), UINT32_C(0x46d9b8ac), UINT32_C(0x57f90206), UINT32_C(0xcb246290),
	UINT32_C(0x5fda94c2), UINT32_C(0xb9969e83), UINT32_C(0x990053fe), UINT32_C(0x0cef1f8b),
	UINT32_C(0x9baafefa), UINT32_C(0x232b8463), UINT32_C(0x0fc77197), UINT32_C(0xd113a2d8),
	UINT32_C(0xd6c99ef7), UINT32_C(0xf3fb7189), UINT32_C(0x9ceeb1dd), UINT32_C(0x352df180),
	UINT32_C(0xfeed780c), UINT32_C(0xee211518), UINT32_C(0x3afaca18), UINT32_C(0x95f13c50),
	UINT32_C(0xd8449f2a), UINT32_C(0x59752549), UINT32_C(0x854f0980), UINT32_C(0x234a07b4),
	UINT32_C(0x51c0c69b), UINT32_C(0xa71d489e), UINT32_C(0x618cbc79), UINT32_C(0xab0e51e1),
	UINT32_C(0x965c4507), UINT32_C(0xe90488a4), UINT32_C(0x73674eb7), UINT32_C(0x00af1456),
};

template<>
const xormix48::word_t xormix48::XORMIX_SALTS[48] = {
	UINT64_C(0xdc2a970723c9), UINT64_C(0xe3e9a7b5f00f), UINT64_C(0x368fddfe10b2), UINT64_C(0x75cf3224f670),
	UINT64_C(0xadc3319ee962), UINT64_C(0xc9fdd5da7238), UINT64_C(0x838aa6d68e51), UINT64_C(0x34504e889c4e),
	UINT64_C(0x16f61844dd41), UINT64_C(0x316767a3bcb6), UINT64_C(0x4f2b4ee6a079), UINT64_C(0x8a9ef2995097),
	UINT64_C(0x8f8919a04ad3), UINT64_C(0x54d0862260f6), UINT64_C(0x59bf4852d6de), UINT64_C(0xe182ee2c64dc),
	UINT64_C(0x117087d44a4c), UINT64_C(0x2de1ba749c87), UINT64_C(0x4db37369078b), UINT64_C(0xc4d0b2be2d19),
	UINT64_C(0xfe1e25f4f213), UINT64_C(0x11f41b1ba06e), UINT64_C(0x0f2cf602d40a), UINT64_C(0x1a4f0b78edd2),
	UINT64_C(0x0635bdf9a9a1), UINT64_C(0xe6066341f129), UINT64_C(0xd63a2e6c6b6e), UINT64_C(0x3f0b1417a83e),
	UINT64_C(0xaa5f9fc3447b), UINT64_C(0xfd4ca29740b2), UINT64_C(0xd307b0424a1f), UINT64_C(0x377cf18c8a09),
	UINT64_C(0x4ae1ee2f8ff1), UINT64_C(0x6470f197fbcc), UINT64_C(0x93fb56272e46), UINT64_C(0xb8ff040d894b),
	UINT64_C(0x7de7947afb4b), UINT64_C(0x8c2c614e379f), UINT64_C(0x981e3a7298fb), UINT64_C(0x1d16c2d1672f),
	UINT64_C(0x3e8785982f5c), UINT64_C(0xe92ab1204c26), UINT64_C(0xf7c8549141c1), UINT64_C(0x109c81c9df19),
	UINT64_C(0x9379f90a2ff8), UINT64_C(0x583491406df0), UINT64_C(0x00302447d0cf), UINT64_C(0x34c3236725e9),
};

template<>
const xormix64::word_t xormix64::XORMIX_SALTS[64] = {
	UINT64_C(0x6c1f4cf86b670928), UINT64_C(0x254b7cacdf1f7f73), UINT64_C(0x9384f7a0b1b8600e), UINT64_C(0x6402b3d837dfb664),
	UINT64_C(0x7cb8aabfdc88b651), UINT64_C(0xb89b5f5e1de22367), UINT64_C(0x5def7160d6d4e4b9), UINT64_C(0x8d2ef95b68e2110b),
	UINT64_C(0xffc0742fc5f3dbe3), UINT64_C(0x87ce80324751b6e0), UINT64_C(0x147610fcd384ae2a), UINT64_C(0xbb625e1c429581e7),
	UINT64_C(0x42c3fc05de25f0c0), UINT64_C(0xdb6752d26b3e7d9a), UINT64_C(0x3edd68a5eb6ba2b1), UINT64_C(0x63600f8ae4c7a36a),
	UINT64_C(0xa8b436b35f0594b6), UINT64_C(0xe7740ee396e0303c), UINT64_C(0x4711b906c747cf69), UINT64_C(0x2bd0973542881c68),
	UINT64_C(0x9819f173380f1778), UINT64_C(0x05fa834a446f5780), UINT64_C(0x3aca5c28507a9812), UINT64_C(0x3f8fae1df7b5284f),
	UINT64_C(0x0fca61766c25a956), UINT64_C(0x344a280b81b3dc59), UINT64_C(0x9ae49767ed2aac9d), UINT64_C(0x136354a988e7dc44),
	UINT64_C(0xa47463136a589763), UINT64_C(0xcca5d6d4ad8ff5e6), UINT64_C(0x3e2a049598688d41), UINT64_C(0xd79394eb53e8e614),
	UINT64_C(0x3bebfb323f75041e), UINT64_C(0x635aa20bf255c061), UINT64_C(0x6026a67855446ab6), UINT64_C(0x6f801ac1a01937d3),
	UINT64_C(0x282dcf755931c792), UINT64_C(0x42a866fb536b5c24), UINT64_C(0xfc666ffe8b3ee689), UINT64_C(0xa2e9693598d4d120),
	UINT64_C(0x68d7594964f92460), UINT64_C(0xadbcae73ac34dd49), UINT64_C(0x993e260d3c6f44bc), UINT64_C(0x5c72e28f77c7ab3d),
	UINT64_C(0x6863f70a8cc13391), UINT64_C(0xb3bc2c1931d5afe6), UINT64_C(0x590494397519cd48), UINT64_C(0x77ecc3481691cd65),
	UINT64_C(0x1388ee338164ea29), UINT64_C(0x2ff27333a309bbbc), UINT64_C(0xeaebc14b790da4b9), UINT64_C(0x61c2af10615a09fb),
	UINT64_C(0xa35d4d739948bace), UINT64_C(0xdda19468d60247e6), UINT64_C(0xcf1f611a8269bc91), UINT64_C(0x0adeb7af980adf73),
	UINT64_C(0x14eccb6a88a0129e), UINT64_C(0x71aaacdba83328de), UINT64_C(0x135e1971c5db62b7), UINT64_C(0xc5041c150065d8fd),
	UINT64_C(0x42a68068988aff0c), UINT64_C(0xf811709d805968db), UINT64_C(0xe3bd59c3b7844bc4), UINT64_C(0xe9602cb6280a6c70),
};

template<>
const xormix96::word_t xormix96::XORMIX_SALTS[96] = {
	UINT64_C(0xe6e1c2523bab), UINT64_C(0x6319a0b833ef), UINT64_C(0x28c24e41956c), UINT64_C(0x6065db7e5e95),
	UINT64_C(0x8343f957dbb2), UINT64_C(0x45405efdaa7a), UINT64_C(0xe5d590c79c4e), UINT64_C(0x0e1f7d0fa053),
	UINT64_C(0x72f51066b415), UINT64_C(0xa5b1c14726c1), UINT64_C(0x563e593aef70), UINT64_C(0xaead4a87a54e),
	UINT64_C(0x57eacf751855), UINT64_C(0xf85964c82d10), UINT64_C(0x2220e6f59d5c), UINT64_C(0xc8d61c3bdd04),
	UINT64_C(0xbbdf7bee652e), UINT64_C(0xffdfe8c9ec04), UINT64_C(0x3cf833623b5c), UINT64_C(0x0bb59f564d1d),
	UINT64_C(0xdc4a4b49c11d), UINT64_C(0x68ab49b831b7), UINT64_C(0x2df2d4f33c4c), UINT64_C(0xb657de372e38),
	UINT64_C(0xb24f224d200f), UINT64_C(0x1b15b9b87e0b), UINT64_C(0xf05e619655c0), UINT64_C(0xe0592230e4f0),
	UINT64_C(0xdf8518243c1e), UINT64_C(0x55568b9e8eb9), UINT64_C(0x0e2fda153d84), UINT64_C(0x2097eb070e75),
	UINT64_C(0xf7411d8164ba), UINT64_C(0xa8eefca08e65), UINT64_C(0x9f8fd13e40e1), UINT64_C(0x89ada553c567),
	UINT64_C(0x42c1ec2f26a4), UINT64_C(0x2ee76cd6b4ec), UINT64_C(0xbf6b2c0f4a77), UINT64_C(0x2c6c0454a632),
	UINT64_C(0x9981c733d157), UINT64_C(0x0b37c3a328d8), UINT64_C(0x91ec2c80e292), UINT64_C(0x35dd3d4dfe61),
	UINT64_C(0x92df5700a660), UINT64_C(0x417e04444967), UINT64_C(0x13178eb22a88), UINT64_C(0xca4e892f298a),
	UINT64_C(0x22e412ce68ac), UINT64_C(0x6b62bb76b845), UINT64_C(0xc7eb98ab64fb), UINT64_C(0x50401c5a2989),
	UINT64_C(0x7fd3e8882b5c), UINT64_C(0xafc0de3b891e), UINT64_C(0xd3b5fd0b6e9a), UINT64_C(0x2539fb51cfa4),
	UINT64_C(0x54442f94ba0a), UINT64_C(0x67d1e7005a50), UINT64_C(0xe57d2914a95c), UINT64_C(0x5ab4670b4474),
	UINT64_C(0x79a2d0002c45), UINT64_C(0x0c94162c5cd9), UINT64_C(0x93988a99d2a4), UINT64_C(0x62842083ccff),
	UINT64_C(0xe88fa0370fef), UINT64_C(0xd9714416b2ca), UINT64_C(0xe2da8b9c4ea0), UINT64_C(0x71e565420304),
	UINT64_C(0x2f2fb54339b7), UINT64_C(0xf600635b03e9), UINT64_C(0x0e07b212e026), UINT64_C(0x3b2b25e41fd4),
	UINT64_C(0x23e29f5da7d4), UINT64_C(0x1437b0707927), UINT64_C(0x25aa2c490b12), UINT64_C(0x14f049c34ce7),
	UINT64_C(0xe525a0aec14c), UINT64_C(0x980a5232856c), UINT64_C(0x05f36b66d06c), UINT64_C(0x621ca5773ee0),
	UINT64_C(0x0562992c8488), UINT64_C(0x38fed51e65bc), UINT64_C(0x946dfd193631), UINT64_C(0xacb5372755de),
	UINT64_C(0x9f9668cc5101), UINT64_C(0xb2c1198a220c), UINT64_C(0x1280558611fb), UINT64_C(0xfb904152a001),
	UINT64_C(0x39870226cc5b), UINT64_C(0xced40885938f), UINT64_C(0x87cf98d9ec8a), UINT64_C(0xdb2b3756627f),
	UINT64_C(0xb552f5e0efac), UINT64_C(0x4948ad10dbff), UINT64_C(0x9ae094807b62), UINT64_C(0xebedd4ed7a02),
	UINT64_C(0xcf95a9421cbc), UINT64_C(0x85efd26b94b3), UINT64_C(0xab16980c1af0), UINT64_C(0x124a583ab57f),
	UINT64_C(0x30c7d02d3520), UINT64_C(0x0162d2d5a8a5), UINT64_C(0xf627fe72b19f), UINT64_C(0xd4bf39f96519),
	UINT64_C(0xb1fa91c8f332), UINT64_C(0x59b142a05f99), UINT64_C(0x7d1fbd5a4fec), UINT64_C(0x105feec6ab48),
	UINT64_C(0x58d1bc75473a), UINT64_C(0xe5532b055113), UINT64_C(0xad24ebcbc639), UINT64_C(0x8dfbf97fde56),
	UINT64_C(0x202f6ab8b81f), UINT64_C(0xde40acfad1d7), UINT64_C(0xabf6b6da65ab), UINT64_C(0x2e921e597fb8),
	UINT64_C(0xf3e4fde1f23e), UINT64_C(0xaa0f40d36ad7), UINT64_C(0x45f4cff511f6), UINT64_C(0x5d02c224218a),
	UINT64_C(0x67fe411d9e2d), UINT64_C(0x4b12bd11e2b9), UINT64_C(0x8419d1c4e967), UINT64_C(0xc6e89b6f342a),
	UINT64_C(0xac99c26d675f), UINT64_C(0x8ce6c1f47c8c), UINT64_C(0xe3bab96783bc), UINT64_C(0xa4436deb7759),
	UINT64_C(0x3ae251322632), UINT64_C(0x9cd991a21052), UINT64_C(0xcc1466d55960), UINT64_C(0xef206554e9b3),
	UINT64_C(0x1a5d49fd8319), UINT64_C(0x756e211b269c), UINT64_C(0xff7fc38f9668), UINT64_C(0xd09797bac005),
	UINT64_C(0x4d69d6a9f493), UINT64_C(0x96ca13281ff6), UINT64_C(0x345ddd4b8448), UINT64_C(0x9a50ef154caa),
	UINT64_C(0x00465de9b33e), UINT64_C(0x3c4c5f09a90e), UINT64_C(0x680358a4e882), UINT64_C(0x526d1f91c85c),
	UINT64_C(0x8d647b5b52c2), UINT64_C(0x1c82cd96109c), UINT64_C(0x444c30435136), UINT64_C(0x316799a62a2b),
	UINT64_C(0x7a11ab09ac47), UINT64_C(0x08380ff335a1), UINT64_C(0x52f50325a5fe), UINT64_C(0xba77c19d9e6c),
	UINT64_C(0xaf343fd91134), UINT64_C(0x41c3c9dbbde1), UINT64_C(0x097784e989e9), UINT64_C(0xe0999d460fed),
	UINT64_C(0xe392762e4443), UINT64_C(0xa3dd3f1b7fd7), UINT64_C(0xb2e4df3ef598), UINT64_C(0xeea1f4020b54),
	UINT64_C(0x2582bb31175f), UINT64_C(0xbf2b253de7f8), UINT64_C(0x9b539c55a908), UINT64_C(0x66b33be6f164),
	UINT64_C(0x64772b58fd36), UINT64_C(0x3c5cc9869dbc), UINT64_C(0x3c4c06197a6c), UINT64_C(0xcaaed0786359),
	UINT64_C(0x9bc627cd9cba), UINT64_C(0x1a90406dce18), UINT64_C(0x5870f588b01e), UINT64_C(0x84812ab82217),
	UINT64_C(0xb04f9d92d83b), UINT64_C(0x3e5e9bdd1d64), UINT64_C(0xf7c6ec628791), UINT64_C(0x3bc6cf51e924),
	UINT64_C(0x53f739d3546a), UINT64_C(0x41cd883fb8ff), UINT64_C(0x67ff87f2efa6), UINT64_C(0x87477f4ae254),
	UINT64_C(0xd52621247482), UINT64_C(0xea009c451178), UINT64_C(0x340bb2cc2fab), UINT64_C(0xa84713d6f74b),
	UINT64_C(0x1206f6e198a4), UINT64_C(0xfa0fdf6dc5d1), UINT64_C(0xdbecdcd28ff9), UINT64_C(0x64fd0ca64551),
	UINT64_C(0x9c2bcf02bcf7), UINT64_C(0xc4d5c6cf2037), UINT64_C(0xa737fdefa863), UINT64_C(0x1bff24a6feba),
};

template<>
const xormix128::word_t xormix128::XORMIX_SALTS[128] = {
	UINT64_C(0x5037b5ab9dbc3488), UINT64_C(0x13262f1ed94d35de), UINT64_C(0xadf9a9bdbff1223e), UINT64_C(0x7ff3ef25ad7380b8),
	UINT64_C(0x3a7e57b7273176a3), UINT64_C(0x381bbba7d431439e), UINT64_C(0x05e11fe401cf6fbb), UINT64_C(0x103dca29fc314d3f),
	UINT64_C(0x3b37be5e9323f719), UINT64_C(0x9575b7768be3b6f6), UINT64_C(0x852c0f137baa77c1), UINT64_C(0xb310cd417e865701),
	UINT64_C(0x8f59b935b3e19ad0), UINT64_C(0xf91ab0c9d06a6fab), UINT64_C(0xa498e6edd1a7fff8), UINT64_C(0xbb051ea62ebdb876),
	UINT64_C(0xbe6edd8b7b1da9c4), UINT64_C(0xd4d69acbbb4ef412), UINT64_C(0x3201f2fcb2913077), UINT64_C(0x58c7d8956ee996cb),
	UINT64_C(0x067157b612a796d0), UINT64_C(0x44c0eaa7acea07dc), UINT64_C(0x2f0dc6387e490584), UINT64_C(0x0bfadd9ea7853720),
	UINT64_C(0x6a4794d71bfde238), UINT64_C(0xe84ed06e8ef90d82), UINT64_C(0x068d13b2573889f5), UINT64_C(0x8333c010a7a2c1de),
	UINT64_C(0x300c62a1f3f988a7), UINT64_C(0x131b25f5290a2d7c), UINT64_C(0xe93a50422bf7c93e), UINT64_C(0x51690ae0ba825d13),
	UINT64_C(0xc9b1740ae1682c7c), UINT64_C(0x5401edc6eacf9376), UINT64_C(0x11412a294eaec4e3), UINT64_C(0x0102213a944f7a3b),
	UINT64_C(0x4f1f20a17431ea84), UINT64_C(0xa30c5a4fca8b3b77), UINT64_C(0x8dd4c95dc5d17fc8), UINT64_C(0xb87010456ab8d88b),
	UINT64_C(0x2ebdc43faa118a3d), UINT64_C(0x0e751da1db416c31), UINT64_C(0xd8f9fd86993a5e7b), UINT64_C(0xe8ebde2abd705c86),
	UINT64_C(0x76d338b2696cbd46), UINT64_C(0x0c2437807aaa24ff), UINT64_C(0x794f864e524e3d05), UINT64_C(0xe0cda84666200d77),
	UINT64_C(0x79bdb371e10deab6), UINT64_C(0x7331f65d083f9816), UINT64_C(0x7ccd29aa9617940c), UINT64_C(0x14e1dbdb706146c8),
	UINT64_C(0x43365f3838f1a6f2), UINT64_C(0x3129867e0d1cae87), UINT64_C(0xd2675a5ef558c9ca), UINT64_C(0x20a9e692001abc41),
	UINT64_C(0x3c3a38d31856c3be), UINT64_C(0x992ecb2546eba50e), UINT64_C(0x88a90385e1bb7ec4), UINT64_C(0xf5474098a6f8e72c),
	UINT64_C(0x6cefa419fabae38e), UINT64_C(0xf4ca5329109c00d3), UINT64_C(0xfa6502f6572ce3b5), UINT64_C(0x0e0a135ebd4ade22),
	UINT64_C(0x8f36503aa9322a10), UINT64_C(0xb499352d4c2c6d32), UINT64_C(0x2859bd534c03eddc), UINT64_C(0x658f170a3d5eb138),
	UINT64_C(0x59a70c4f5c903b9d), UINT64_C(0x301d9ba87df8d36c), UINT64_C(0x01072fd7e66b3aa3), UINT64_C(0x89d5524900fe6b67),
	UINT64_C(0x767602e169da1734), UINT64_C(0xbf53a13583b45c0c), UINT64_C(0x7370d2ffaaf50692), UINT64_C(0xc8e4c9c9ff523166),
	UINT64_C(0xd593ba723fc7d8c6), UINT64_C(0x360f32162410c113), UINT64_C(0x7ea8be62f7d37e6f), UINT64_C(0x5e6024e9ee3f909d),
	UINT64_C(0x70e8ebe1e1b3a93e), UINT64_C(0xb7ab9b30669a5a60), UINT64_C(0xc413ba90f1784dec), UINT64_C(0x22b34c2e328f75bd),
	UINT64_C(0x83718e4b5e59cb10), UINT64_C(0x4c09a5bcf925c18d), UINT64_C(0x30bb301a56b5218e), UINT64_C(0x85c76e9db31ad055),
	UINT64_C(0xfaa63ff210faa19e), UINT64_C(0xf37135381111fd49), UINT64_C(0x3d5e8a1f3bdac15b), UINT64_C(0xd1d1ea95a0e8c0bf),
	UINT64_C(0xd8f5cd3857a43a64), UINT64_C(0x5933613e9f3214eb), UINT64_C(0xbeff10e60b0f9ac6), UINT64_C(0xd9bf1cdf18b5d798),
	UINT64_C(0x7618b748f434fe31), UINT64_C(0x51981d2ac6601c9d), UINT64_C(0xf77adc87e60bcd0f), UINT64_C(0x9a69338b783383a3),
	UINT64_C(0x88b78f95c2b1984f), UINT64_C(0xe0bd8f5a2afeb402), UINT64_C(0x359190cf59a54f04), UINT64_C(0x7e1e701939f16165),
	UINT64_C(0x8733c6cd6eb481e5), UINT64_C(0x02b67174dc3c1d51), UINT64_C(0xb9ec55cb7c363c39), UINT64_C(0xe3264b5d279d0575),
	UINT64_C(0xc50981d3c4088e92), UINT64_C(0xc7feacc68d29d6fa), UINT64_C(0x812c455df6cf92d0), UINT64_C(0xae5910192d2aa1f4),
	UINT64_C(0x74c8d42a5a86f753), UINT64_C(0x80d258457c5bc950), UINT64_C(0x6ef671a872141a82), UINT64_C(0x6c65832f23f43eae),
	UINT64_C(0x0434eb9ae66b5b33), UINT64_C(0xb50a5ea77901f55f), UINT64_C(0x387f22aea9be95c6), UINT64_C(0x5e684ded016cb40d),
	UINT64_C(0x1ea35cb9fd2e62f9), UINT64_C(0xafd9af4b5cf7191f), UINT64_C(0x614d38a4b90171b2), UINT64_C(0x97d615c53cd4923c),
	UINT64_C(0x79b2d3a9b29b5521), UINT64_C(0x0db87bc5c1e67283), UINT64_C(0x28707a583af04239), UINT64_C(0xe20c664651c3d423),
	UINT64_C(0x7e027925e7675b94), UINT64_C(0xc5fbf5c3a47655d6), UINT64_C(0xb88a8e07cf291032), UINT64_C(0x730e3687735b1889),
	UINT64_C(0xf005cbf2adbb271c), UINT64_C(0xa0e7875e6c8cad2e), UINT64_C(0x74d2338b5bad0afb), UINT64_C(0xb1af2c9c8c29a4e4),
	UINT64_C(0x6dbe13197f40cc43), UINT64_C(0xaee9cf0e3d634e78), UINT64_C(0x95d843f20f9358b1), UINT64_C(0x17542b21cbec8d14),
	UINT64_C(0x2e682e54723518c7), UINT64_C(0xbfd591a612ab72bf), UINT64_C(0xb7b11297d6d46d4e), UINT64_C(0x923c62e69bde4f75),
	UINT64_C(0xfbc52f5cd9fc10bb), UINT64_C(0x2a58c173ee11d4ca), UINT64_C(0xca5dde8c906754f6), UINT64_C(0xc8d9279162d7730e),
	UINT64_C(0x97a49e801f6214fe), UINT64_C(0xecd0cfe2ef3a2b62), UINT64_C(0x1639de509e92ea9e), UINT64_C(0xc3c09bd89e26a8d2),
	UINT64_C(0x258678211c569f01), UINT64_C(0x57960c3e5964c51b), UINT64_C(0xe761fae8b3d9d4cd), UINT64_C(0xf3c2b154f0073720),
	UINT64_C(0xfe04506afccfd23f), UINT64_C(0x3696ca65addca66f), UINT64_C(0xb3bb0c8667adf5ec), UINT64_C(0xc8282c0619a4ab4a),
	UINT64_C(0x7bf40c8bf34821d5), UINT64_C(0xe996c824b1a3b36d), UINT64_C(0xe15b109bc8816f21), UINT64_C(0x20c9d2c922f18772),
	UINT64_C(0x74069f24aaef94f3), UINT64_C(0x857e76882355a431), UINT64_C(0x0606c022e177884c), UINT64_C(0x65bc59d13c9f1c02),
	UINT64_C(0x9b73077b4199b59c), UINT64_C(0x6950dd6b52bccfa9), UINT64_C(0x11fb3a34ebedbe58), UINT64_C(0x304931f308d9a27c),
	UINT64_C(0xcf622a6d3bff6107), UINT64_C(0xdf182f5cab14cd39), UINT64_C(0x790a2a7edd383fe0), UINT64_C(0x65a35232d8d0dbe4),
	UINT64_C(0xf8df480e46fb4bc6), UINT64_C(0x47128844e1e9270b), UINT64_C(0x5088ffd970256144), UINT64_C(0xdbeaae962a0a698f),
	UINT64_C(0x441a670f9380f30d), UINT64_C(0x8aed916e4d36e7d3), UINT64_C(0x53cfbf7152d255d2), UINT64_C(0xbcbfbb13f986a396),
	UINT64_C(0x42a5d5256969aa9a), UINT64_C(0x16e10d8df52cc484), UINT64_C(0x15a892a614986841), UINT64_C(0x43cb709d85da0e50),
	UINT64_C(0x7b24ca77b1cea27c), UINT64_C(0x397e57c92f986154), UINT64_C(0xcc8af45404fcc6be), UINT64_C(0xa355f9fd7fbf38fb),
	UINT64_C(0xfc5b3ac93926cd6a), UINT64_C(0xaa5cd73b8a0940b4), UINT64_C(0xa8fab36f9a21157f), UINT64_C(0x5ded207cd2e59c3d),
	UINT64_C(0xd996cd4441425a97), UINT64_C(0x3a6f475c1ecb7c13), UINT64_C(0x50afc4b495085f2c), UINT64_C(0x77b676851c7abda8),
	UINT64_C(0x2634c1d79f45892d), UINT64_C(0xf7ad24f627563367), UINT64_C(0xe333b2d35fa015b6), UINT64_C(0xda03176c01e50cdf),
	UINT64_C(0xd8a58035655c3deb), UINT64_C(0x2863d4577783878f), UINT64_C(0xd1fd224b16e58d79), UINT64_C(0xb334f15329dccb8c),
	UINT64_C(0xc82f31311f9e6fca), UINT64_C(0xfdf7d79bc286586d), UINT64_C(0xffafc51ae8a5fb93), UINT64_C(0xd5ae4ce8a7ce08fc),
	UINT64_C(0x4a127c8b01990c54), UINT64_C(0x026439f83ae85ad9), UINT64_C(0x828e598d46c3b205), UINT64_C(0x7aa46106c2c9f687),
	UINT64_C(0x5c50a7eddc43a709), UINT64_C(0x957b133698028d82), UINT64_C(0xe42ebea0b91fe54f), UINT64_C(0x11b01d55dd67c0c6),
	UINT64_C(0xc56da2d3f7a67ebc), UINT64_C(0x0deea11cc253bddc), UINT64_C(0xafc644cc4a7fba8a), UINT64_C(0xb333a13878ed6467),
	UINT64_C(0x247318da9d130d0a), UINT64_C(0x6fe1bd7b2bd57f1d), UINT64_C(0x20a036758e06ead4), UINT64_C(0xbabeb4db43e98bfa),
	UINT64_C(0xc33f629c27654c29), UINT64_C(0x9b99ae3537b38828), UINT64_C(0xa5523bdaa7d672ce), UINT64_C(0xd6fe5e4c9f390bb6),
	UINT64_C(0x2f12eb3b24e43b6b), UINT64_C(0x46d6eb2ac8cf719a), UINT64_C(0xc586e97599de219a), UINT64_C(0x2136944a515be3f2),
	UINT64_C(0x91281fd5ec28196d), UINT64_C(0x7a6982ded6aa1dfa), UINT64_C(0x16e4e2042546cf60), UINT64_C(0xea225519f1f55c7c),
	UINT64_C(0x9929e1ae0304ba9e), UINT64_C(0x8264b4091f751526), UINT64_C(0xb3c1825b2df6a2f6), UINT64_C(0x2c009fa5c7f106bb),
	UINT64_C(0xc24dabc28e5104c1), UINT64_C(0x03c6b7bc51586c46), UINT64_C(0x1bdb8ecfba049814), UINT64_C(0x96a7aabc97aeaf61),
	UINT64_C(0xc52b1723b77d8ca7), UINT64_C(0x6e6705040215fb0c), UINT64_C(0x4cae459746ef3ae2), UINT64_C(0x20afd57548c2a819),
	UINT64_C(0xa8940562e769aa34), UINT64_C(0xc660367182530702), UINT64_C(0x4fbc5eb23baa5b89), UINT64_C(0x426d334d0210953d),
};

template<>
const size_t xormix16::XORMIX_SHUFFLE[16] = {
	 4,  5, 14,  2,  9,  7,  3,  0, 10,  6, 13,  8, 11, 15,  1, 12,
};

template<>
const size_t xormix24::XORMIX_SHUFFLE[24] = {
	 0,  7, 17,  8,  9, 13, 11, 12,  2, 16, 14,  4, 21, 10,  3, 20,
	22, 19, 15,  1,  5, 23,  6, 18,
};

template<>
const size_t xormix32::XORMIX_SHUFFLE[32] = {
	15, 29,  5,  0, 16,  9, 26, 14, 13, 10, 19, 11,  2,  6,  8, 17,
	20,  4, 22, 30, 31, 21, 24, 25, 18, 27, 28, 23, 12,  7,  1,  3,
};

template<>
const size_t xormix48::XORMIX_SHUFFLE[48] = {
	 8, 23,  2, 15, 46, 31, 22, 12, 27, 17,  9, 39, 42, 19, 28, 45,
	 1,  0, 41, 30,  3, 38, 25, 29, 24,  5, 32, 44, 26, 21, 37, 34,
	13, 18, 35,  6, 11, 36, 43,  7, 40, 33, 20, 10, 47,  4, 14, 16,
};

template<>
const size_t xormix64::XORMIX_SHUFFLE[64] = {
	39, 11, 51, 53, 61, 31, 29, 27, 12, 57, 43, 56, 42,  2, 26, 37,
	41, 10, 20, 44,  7, 28, 13,  9, 25, 32, 52, 14, 19, 60, 48, 49,
	 5, 36,  0,  3, 58, 22, 35, 21, 16, 30, 34, 63,  8, 17, 24, 54,
	18, 50, 45,  6, 46, 33, 23, 62, 15, 59, 55, 38, 40,  1,  4, 47,
};

template<>
const size_t xormix96::XORMIX_SHUFFLE[96] = {
	50, 20, 91, 59, 26,  4, 58, 25, 71, 77, 13,  2, 30, 72, 11, 15,
	45, 61, 80, 19, 33, 35, 62,  1, 74, 18, 90, 66, 67, 88, 28, 53,
	23, 94, 55, 37, 34, 24, 65, 46, 32, 84, 79, 48, 92, 57, 41, 27,
	64, 95, 70,  6, 93, 21, 76, 85, 40, 83, 56, 29, 12,  9, 68, 73,
	78, 69, 22, 47, 42, 82, 44, 54, 36,  5,  3, 63, 31, 16, 87, 38,
	10, 81, 60, 51, 43, 75,  8, 89, 39, 86, 14,  7, 52,  0, 49, 17,
};

template<>
const size_t xormix128::XORMIX_SHUFFLE[128] = {
	 68,  77,  52, 101, 107, 124, 117, 113,  96,  92,   7,  25,  21,  28,  60,   1,
	 17,  26,  44,  27,  59, 127,  46, 110,  83,  98,  54, 126,  29,  95,   0,  20,
	 66,  89,   9,  19,  91,  10,  58, 120,  11, 100,  49,  82,  75,  16,  36, 103,
	 62,  50,  65, 112,  24,  33,  51,  86,  40, 102,  48,  81, 125,  34,  56,  73,
	 32, 118,  78,  69,  45,   6,  93,  53, 116,  84,   3,  97,  99,  39,  70, 119,
	 72,  14,  64, 121,  76,  22, 104,  63, 106,  15,   2,  42,  41,  18, 123, 114,
	  8, 115, 108,  85,  80,  37,  35,  13,  30,  87,  79,  61,   4, 109, 111,  43,
	 67,  55,  23,  12,  74,  47, 105,  90,  94,  71, 122,  57,  31,  88,   5,  38,
};

template<>
const size_t xormix16::XORMIX_SHUFFLE_RA[16] = {
	 7, 12,  2,  4,  3,  9,  0, 11, 10,  5, 15, 13, 14,  8,  1,  6,
};

template<>
const size_t xormix24::XORMIX_SHUFFLE_RA[24] = {
	23,  7,  3, 11,  8, 22, 13, 21, 20, 16,  6, 15, 10,  9,  1, 17,
	18, 12, 19,  0,  2,  5,  4, 14,
};

template<>
const size_t xormix32::XORMIX_SHUFFLE_RA[32] = {
	 4, 17,  7, 19, 24,  3,  8, 10, 27, 20, 21, 23, 26, 11, 29,  1,
	16, 30,  0, 13,  5,  2, 12,  9, 22, 31, 28, 18, 14, 15,  6, 25,
};

template<>
const size_t xormix48::XORMIX_SHUFFLE_RA[48] = {
	46, 39, 23, 34, 28,  8,  0,  4, 14,  6, 25,  9, 44, 33,  3, 20,
	42, 21, 31, 10, 24, 36,  1, 27, 11, 40,  2, 37, 26, 29, 16, 19,
	38, 22, 41, 18, 43, 30, 47,  5, 45,  7, 12, 15, 32, 35, 13, 17,
};

template<>
const size_t xormix64::XORMIX_SHUFFLE_RA[64] = {
	 3, 14, 13,  6, 11, 55, 61, 29, 36, 33, 21, 50,  8, 20,  5, 40,
	63, 23, 60, 22, 30, 39, 38, 35,  7, 26, 15, 28, 12, 58, 10, 16,
	25,  1, 59, 31, 57, 48,  2, 41, 34, 56,  9, 24, 52, 46, 17, 51,
	44, 45, 49, 37,  0, 43, 53, 62, 54, 42, 32,  4, 27, 47, 18, 19,
};

template<>
const size_t xormix96::XORMIX_SHUFFLE_RA[96] = {
	94, 39,  4, 53,  3, 80, 51, 16, 26, 76, 55,  9, 72, 73, 47, 59,
	 7, 84, 37, 83, 93, 77, 92,  8, 30, 79, 74, 44, 29, 90, 49, 75,
	61, 58, 78, 67, 23, 17, 31,  6, 85,  5, 41, 46, 35, 71, 57, 81,
	 2, 12, 50, 20, 65, 68, 95, 40, 22, 88, 82, 21, 45,  1, 36, 69,
	14, 33, 91, 60, 10, 38, 25, 32, 43, 52, 18, 42, 48, 70, 19, 15,
	13, 28, 34, 89, 64, 62, 63, 11, 86, 56, 66, 54, 27, 87,  0, 24,
};

template<>
const size_t xormix128::XORMIX_SHUFFLE_RA[128] = {
	107,  37, 102,  48,  74,  54,  14,  57,   8,  82,  35, 112,  83,  87,  95,  28,
	 49,  92,  81,  85,  33,   2,  56,  18,  68,  19,  86,  70,  26,  41,  22, 114,
	 50,  34,  16,  46,  31,   7, 100, 109,  27,  99,  20,  29, 108,  17,  89,  96,
	 88, 104,  64,  90, 105,  43,  67,   0,  24,  36,  44,  55,   9,  66,  78,  53,
	116,  32,  40, 106,  15, 101,  45,   6,  62,  65,   1, 124,   5, 122, 110, 127,
	117,  58,  71,  38,  42, 118,  69,  23,  84,  25, 119,  97,  12,  91, 123, 120,
	 61, 126,  59,  94,  10,  75,  39,  93, 125,   4,  60,  47, 115,  63,  30, 111,
	 72,  76,  77,  80, 113, 121,  52,  73,  98,  13,  79,  21,   3, 103,  51,  11,
};

template<>
const size_t xormix16::XORMIX_SHUFFLE_EXTRA[6][16] = {
};

template<>
const size_t xormix24::XORMIX_SHUFFLE_EXTRA[6][24] = {
};

template<>
const size_t xormix32::XORMIX_SHUFFLE_EXTRA[6][32] = {
	{ 1,  3, 21, 25, 23,  8,  9, 30, 29, 24,  0,  2, 18, 11, 12, 17,
	 16, 10, 13, 14, 19,  4, 22,  7, 15, 26, 31, 28, 20,  6, 27,  5},
	{ 8, 16, 11, 14, 17, 15,  0, 29, 25,  4,  3,  5, 19, 20, 26, 27,
	 28, 22, 12,  1,  9,  2, 30, 13,  7,  6, 10, 24, 31, 21, 18, 23},
	{ 6, 21,  0, 27,  4, 30, 19,  3, 12, 16, 18, 28, 22,  7, 15,  8,
	 14, 23,  2, 20, 24, 26, 11, 25, 13, 10,  5, 29, 17,  1, 31,  9},
	{ 6, 20,  2, 26, 10,  7, 21, 17, 11, 12, 19, 31, 22, 27, 14, 15,
	 18,  3,  4, 24, 13, 28,  0, 30, 16,  5,  1,  8, 23, 29,  9, 25},
	{29, 28, 10, 12, 20, 30, 13,  3, 17,  4, 23, 22,  5,  6,  8, 26,
	 19, 21, 18, 11, 15,  9, 27,  1, 31,  2,  0, 25, 16,  7, 24, 14},
	{26,  4, 30,  2, 22, 21, 15,  6, 13, 31,  7, 19, 25, 16,  9, 20,
	  8,  3, 17, 12,  5, 28,  1, 18, 23, 24,  0, 10, 11, 27, 29, 14},
};

template<>
const size_t xormix48::XORMIX_SHUFFLE_EXTRA[6][48] = {
};

template<>
const size_t xormix64::XORMIX_SHUFFLE_EXTRA[6][64] = {
};

template<>
const size_t xormix96::XORMIX_SHUFFLE_EXTRA[6][96] = {
};

template<>
const size_t xormix128::XORMIX_SHUFFLE_EXTRA[6][128] = {
};

template<>
const size_t xormix16::XORMIX_SHIFTS[4] = {4, 8, 5, 7};

template<>
const size_t xormix24::XORMIX_SHIFTS[4] = {8, 12, 9, 11};

template<>
const size_t xormix32::XORMIX_SHIFTS[4] = {6, 16, 9, 15};

template<>
const size_t xormix48::XORMIX_SHIFTS[4] = {19, 21, 15, 22};

template<>
const size_t xormix64::XORMIX_SHIFTS[4] = {28, 31, 24, 30};

template<>
const size_t xormix96::XORMIX_SHIFTS[4] = {45, 46, 36, 43};

template<>
const size_t xormix128::XORMIX_SHIFTS[4] = {47, 61, 56, 62};

template<>
const size_t xormix16::XORMIX_SHIFTS_RA[4] = {4, 8, 5, 7};

template<>
const size_t xormix24::XORMIX_SHIFTS_RA[4] = {8, 12, 9, 11};

template<>
const size_t xormix32::XORMIX_SHIFTS_RA[4] = {6, 16, 9, 15};

template<>
const size_t xormix48::XORMIX_SHIFTS_RA[4] = {19, 21, 15, 22};

template<>
const size_t xormix64::XORMIX_SHIFTS_RA[4] = {28, 31, 24, 30};

template<>
const size_t xormix96::XORMIX_SHIFTS_RA[4] = {45, 46, 36, 43};

template<>
const size_t xormix128::XORMIX_SHIFTS_RA[4] = {47, 61, 56, 62};

template<>
const uint8_t xormix16::XORMIX_XORTAPS[1024][8] = {};
template<>
const uint8_t xormix24::XORMIX_XORTAPS[1024][8] = {};
template<>
const uint8_t xormix32::XORMIX_XORTAPS[1024][8] = {};
template<>
const uint8_t xormix48::XORMIX_XORTAPS[1024][8] = {};
template<>
const uint8_t xormix96::XORMIX_XORTAPS[1024][8] = {};
template<>
const uint8_t xormix128::XORMIX_XORTAPS[1024][8] = {};

template<>
const uint8_t xormix64::XORMIX_XORTAPS[1024][8] = {
	{42, 56, 19, 46, 34, 12, 13, 38},
	{10, 30, 28, 23, 40,  6, 32, 36},
	{ 9, 14, 60,  3, 48, 33, 55, 31},
	{ 1, 63,  9, 39, 18, 57, 33, 30},
	{50, 22, 18,  0,  6, 63, 42,  7},
	{19,  0, 32, 25, 13, 49, 57, 23},
	{18, 35, 39, 47, 40, 11, 57,  8},
	{19,  7, 43, 13,  5, 37, 53,  2},
	{41, 63, 17,  7, 13, 16, 30, 23},
	{44, 25, 60, 28, 49, 32, 20,  1},
	{15, 62,  9, 47, 35,  8,  1, 37},
	{49, 28, 14, 35, 27, 26, 55, 24},
	{26, 22,  6, 59, 23, 49, 32, 36},
	{17, 51, 31, 54, 45, 21, 49, 22},
	{ 6,  2, 30, 62, 41, 50, 32, 27},
	{52, 23, 16, 34, 32, 35, 43,  9},
	{48, 44, 17, 18, 47, 22, 10, 23},
	{56,  2, 62, 40, 58, 28, 60, 17},
	{58, 61, 55, 62, 48,  3, 49, 19},
	{62,  6, 55,  4, 26, 52, 56, 20},
	{61, 43, 39, 56, 14, 57, 31, 44},
	{14, 49, 17, 44,  4,  1, 33,  7},
	{39, 40, 11, 13, 58, 51,  2, 10},
	{ 2, 55, 59, 60, 49, 53, 17, 30},
	{39, 62,  0, 40, 16, 28,  5, 63},
	{63, 59, 62,  8, 57, 60, 16, 21},
	{ 7,  9, 34,  0,  2, 19, 62, 63},
	{27, 11,  2, 54, 36, 35, 51, 57},
	{30, 48, 26, 51, 17, 42, 56, 44},
	{36, 18, 25, 61, 21, 45, 39, 37},
	{14, 37, 29,  7, 48, 44, 62, 53},
	{ 1, 21, 61, 47, 45, 48, 15,  0},
	{27, 59, 10, 18,  8, 60, 21, 34},
	{52, 12, 19, 39, 51, 40, 46, 53},
	{38, 53, 55, 31, 59, 26,  1, 43},
	{48,  1, 60, 21,  9, 42, 56, 55},
	{34, 50, 14, 29,  1, 54, 63, 17},
	{ 5, 15, 43, 21, 55,  1, 16, 26},
	{29, 53,  4, 33, 18, 16, 40, 46},
	{22, 56, 45, 57, 13, 51, 53, 20},
	{61, 37, 18, 33,  6, 29, 27, 21},
	{25, 49, 57,  5, 56, 50, 13, 63},
	{40,  0, 11, 14, 42, 48, 27, 15},
	{61,  6, 14,  0, 30, 15, 27,  8},
	{28, 17,  9, 22,  3, 34, 51, 48},
	{32,  1, 40, 59, 58, 12, 56, 63},
	{ 9, 44, 16, 27,  7, 54, 25, 23},
	{55, 56, 36,  8,  5, 11, 54, 52},
	{27, 21, 29, 43, 31, 20, 40, 26},
	{38, 63, 43, 24, 34, 35, 13, 52},
	{10, 17, 45, 18,  8, 36, 40,  4},
	{58, 52, 29, 55, 63,  2, 57,  3},
	{34, 58,  1, 41,  5, 56,  3, 47},
	{40,  1, 48,  8,  4, 45, 16, 12},
	{12, 49, 31, 23, 35, 15,  9,  2},
	{ 8, 22, 47, 35,  6, 27, 11, 42},
	{56, 38, 26,  9, 34, 57, 21, 31},
	{ 5, 33, 32, 38,  8, 31, 26, 24},
	{38, 48, 32, 30, 35, 17, 60, 20},
	{ 8,  7, 40, 53, 11, 27, 54, 18},
	{50, 33, 51,  6, 44, 38, 58, 42},
	{53, 36, 41, 46, 22, 29,  2, 47},
	{10,  7, 23, 59, 15, 35, 47, 43},
	{24, 19, 51, 11, 47,  7, 35, 40},
	{ 7, 23, 22, 57, 25,  2, 50,  3},
	{52, 39, 10, 26, 60, 48, 42, 20},
	{19, 12, 35, 46, 58, 51, 31, 48},
	{23, 25,  2, 45, 40, 49, 15, 59},
	{26, 28, 55, 57,  0, 10, 40, 17},
	{11,  7, 10, 41,  4, 13, 45, 49},
	{18, 26, 52, 14, 11, 62, 29, 19},
	{35, 57, 23, 14, 53, 18, 44, 52},
	{ 6, 47, 38, 20, 13, 58, 25, 23},
	{21, 43, 33, 44, 36, 45, 23, 22},
	{46, 26,  9,  1,  0, 23, 51,  6},
	{20,  9, 27, 17, 21, 45, 16, 51},
	{ 9, 43,  0, 17, 36, 21, 35, 61},
	{59, 61,  0, 20, 11,  5, 16, 19},
	{59, 36, 11,  2, 15,  9, 44,  1},
	{13, 33, 16, 31,  6,  0, 25, 35},
	{20,  5, 60, 61,  1, 48, 63, 57},
	{60, 29, 28, 21,  3, 30, 37, 27},
	{48,  5, 60, 23, 53, 43, 31, 35},
	{37, 61,  9, 26, 33, 11, 14, 17},
	{ 1, 35, 39, 14, 21, 29, 38, 19},
	{60, 48,  9, 32, 24, 16,  8, 39},
	{19,  4, 36, 50, 57, 44,  6, 10},
	{16, 60, 33, 21, 25, 51, 56, 58},
	{39, 29, 57,  6, 54, 47, 24, 18},
	{51, 40, 43, 21, 54, 52, 34,  4},
	{46, 20, 33, 27, 28, 62, 21, 26},
	{24, 53, 39, 26, 40, 14, 50,  7},
	{51, 16, 62,  0, 38, 44, 10, 29},
	{44, 31,  0,  8, 54, 33, 35, 22},
	{47,  3, 44, 29, 18, 59, 35,  4},
	{16,  2, 21,  9, 26, 18, 36, 40},
	{60, 58, 40,  2, 45, 21, 41, 38},
	{ 7, 59, 23, 54, 31, 44, 43, 60},
	{43, 56, 41, 37, 46,  4,  9, 15},
	{16, 22, 10,  5, 53, 50, 27, 14},
	{11, 54, 47, 58,  8, 53,  9, 34},
	{62, 22, 40,  9, 43, 55,  3, 45},
	{60, 61, 15,  6,  1, 38, 37,  9},
	{33, 21, 53,  7, 14, 52, 62, 49},
	{57, 48, 29, 62, 20, 51,  0, 54},
	{19, 43, 12, 28,  4, 58, 38, 29},
	{11, 31, 22, 46, 24, 49, 28, 53},
	{14,  6, 47, 42,  1, 11, 27,  8},
	{26, 56,  4, 35, 62, 15, 37, 21},
	{ 1, 43, 33, 11, 47, 61, 49,  3},
	{55, 12, 39, 47, 22, 29, 52, 57},
	{59,  1,  6, 60, 36, 50, 38, 61},
	{55,  9, 41, 20, 19, 54, 35, 47},
	{32, 62, 39, 26, 51, 37, 42, 14},
	{36, 26, 63, 23,  0, 38, 21, 22},
	{61,  8, 39, 36, 60, 53, 16, 46},
	{40, 55, 19, 45, 23, 57, 16, 11},
	{49, 15,  0, 55, 63, 19, 29, 56},
	{60, 56, 61, 13,  1, 51, 17, 36},
	{ 3,  8, 25, 19, 47, 44, 41, 51},
	{50,  3, 38, 55, 17, 31, 43, 13},
	{54, 47, 48, 63,  1, 23, 10, 17},
	{16, 22, 42, 61, 63, 35, 30, 55},
	{44, 21, 38, 25, 13, 14, 40, 35},
	{29,  3, 13, 61, 50, 39, 37, 36},
	{60, 38, 40,  9, 14, 25, 55, 59},
	{40, 28, 39, 52, 10, 38, 59, 54},
	{52, 59, 30,  1, 48, 61, 33, 43},
	{ 4, 31, 36, 37, 34,  7, 20, 18},
	{14, 46, 13, 62, 11, 30,  4, 21},
	{ 7, 42, 46, 58, 27, 25, 34,  0},
	{37, 29, 51, 50, 10, 22,  9, 47},
	{40, 26,  3, 24, 48, 61, 17, 14},
	{24, 21, 31, 43, 26, 58,  0, 51},
	{53, 14, 37, 49, 22, 52, 30, 11},
	{ 6, 25, 36, 18, 52, 60, 16, 15},
	{28, 17, 48, 47, 33,  7, 23, 12},
	{30, 24, 49, 37, 33, 42, 40, 46},
	{31, 19,  7,  0, 37, 46, 44,  4},
	{25, 40, 61, 17, 11, 33,  2,  0},
	{28, 34, 50, 23,  8, 30, 12,  4},
	{37, 44, 30, 11, 63, 50, 35, 46},
	{37, 40, 39,  8, 22,  6, 41, 51},
	{35, 38, 42, 25,  0, 23, 41,  5},
	{23, 55, 50, 29,  7, 52, 16, 13},
	{22, 47, 11, 17, 61,  4, 33, 57},
	{36, 51, 21, 56, 35, 20, 46, 54},
	{ 9, 33,  3, 22,  6, 21, 40, 43},
	{52, 37, 61, 53, 57, 32, 48, 47},
	{36, 32, 17, 14, 19, 54, 48,  9},
	{30,  3, 63, 49, 53, 58, 40, 34},
	{60,  6, 21, 62,  7, 46,  0,  1},
	{17, 30, 29, 41, 22,  9, 44, 43},
	{63, 34,  6, 20, 50, 10, 60, 49},
	{32,  6,  0, 29, 54, 25, 13, 19},
	{37, 23, 57, 28, 43, 38, 31, 14},
	{25, 14,  7, 27, 60, 17,  0, 20},
	{55, 49, 36, 60, 22, 16, 45, 33},
	{59, 60, 56, 28, 58,  1, 32,  8},
	{47, 18,  7, 25, 21, 52, 15, 12},
	{ 3, 22, 17, 56, 16, 53, 39, 29},
	{47, 35, 22, 53, 19, 13, 52, 38},
	{32, 61, 28, 56,  4, 27, 34, 59},
	{62, 50, 54, 13,  5, 56, 12, 59},
	{12, 29, 51,  4, 17, 57, 28,  8},
	{45, 41, 20, 58, 33, 26,  4,  7},
	{22, 54, 27, 59, 18,  7, 12, 51},
	{ 3,  4, 11, 34,  5, 21, 48, 60},
	{ 3, 26, 50, 34, 37, 60, 53, 45},
	{21, 42, 53, 62, 46, 10, 52, 63},
	{43, 36, 28, 39, 63, 23, 34, 20},
	{43, 39, 19, 11, 16, 59, 60, 40},
	{27,  3, 37,  6, 45, 16, 58, 20},
	{38,  4, 31, 50, 20, 11, 39, 34},
	{51, 30, 26,  4,  2, 21, 17, 27},
	{24, 53, 44, 25,  6,  4, 61, 51},
	{34, 21, 10, 45, 17, 60,  0, 41},
	{15, 19, 47, 20, 49, 53, 25, 22},
	{15, 17, 63, 11, 10, 14, 62,  4},
	{12, 24, 15, 31,  5, 11, 61, 52},
	{ 3, 59, 50, 40, 19, 29, 36, 52},
	{ 5, 39, 35, 49, 36, 44, 28, 38},
	{34, 17, 16, 42, 48, 38, 11, 12},
	{ 9, 40, 38, 22, 37, 24, 11, 45},
	{41, 40, 27, 60,  4, 44,  6, 17},
	{10, 33, 26, 42, 30, 54,  5, 36},
	{ 0, 37, 43, 11, 28, 17, 10, 62},
	{ 5, 23, 52, 16,  4, 36, 27, 18},
	{24, 47,  6, 27, 17, 62, 55, 37},
	{ 4, 32, 49, 62, 59, 38,  1, 33},
	{59,  8, 41, 63, 62, 51,  6,  5},
	{58, 47,  8, 37, 25, 39, 15, 48},
	{42,  2, 35, 44, 43, 16, 14, 45},
	{55, 52, 16, 24, 19, 45, 39, 43},
	{25, 38,  4, 10, 50, 16, 39, 20},
	{ 4, 55, 34,  6, 36, 21, 45, 13},
	{39,  0, 16, 32, 43, 57, 33,  9},
	{28, 24, 47, 39, 44, 10,  1, 60},
	{22, 62, 35, 17, 19,  9, 61, 63},
	{63, 38, 15, 34, 29, 49, 22,  6},
	{13, 12, 29, 58, 44, 41, 51, 55},
	{54, 30, 22, 57, 25, 56,  9, 45},
	{ 6,  1, 40, 30, 43, 17, 44,  4},
	{45, 30, 16, 62, 44, 25, 41, 47},
	{13, 11, 14, 41,  3, 21, 54, 18},
	{ 2, 35, 30, 57, 60, 33, 25, 17},
	{61, 36,  7, 16, 20,  1, 35,  8},
	{49,  9, 53, 47, 27, 31, 28, 42},
	{29,  7, 57, 21, 33, 20, 49, 34},
	{29, 15,  4,  9, 47, 14, 58, 33},
	{53, 59,  5, 45, 18, 33, 37, 36},
	{23, 31, 18, 61, 11, 20, 26, 62},
	{55, 49,  9, 37,  8, 19, 51, 25},
	{44, 17, 42,  2, 39, 38,  4, 45},
	{43, 58, 41, 17, 34, 59, 18, 46},
	{40, 11, 10, 38, 63, 29,  8, 24},
	{10, 56, 18,  6,  7, 59, 24,  4},
	{55,  6, 14, 39, 15, 57, 52, 26},
	{34, 14, 36, 19, 33, 50, 25, 26},
	{51, 62, 46, 61, 14, 29, 28, 59},
	{46, 24, 31, 50, 17, 28, 61, 38},
	{18, 39,  0, 28, 41, 52, 29, 15},
	{13, 60, 17, 41,  4, 33,  1, 37},
	{25, 58, 10, 15, 21, 63, 35, 50},
	{29, 12, 20, 57, 23,  4, 54, 11},
	{22, 55, 40, 23, 56,  4, 29, 59},
	{22, 59,  1, 39, 23, 33, 19, 40},
	{18, 11, 54, 41, 34, 29, 19, 30},
	{61, 16,  3,  0,  9, 12, 38,  2},
	{ 5, 61,  7, 53, 20, 11, 30, 28},
	{49, 42,  7, 36, 63, 22, 47, 16},
	{17, 14, 52, 43, 50, 23, 39, 26},
	{41, 52, 53, 46, 38,  7, 62, 24},
	{47, 26, 11, 54, 12, 23, 15, 20},
	{33, 26, 21, 57, 51, 24, 43, 45},
	{29, 31, 52, 59, 44, 60,  2, 21},
	{14, 30, 25, 44, 27, 57, 46, 60},
	{41, 10, 28, 40, 42, 25, 59, 38},
	{60,  5,  1,  4, 15, 50, 54, 20},
	{35,  1, 16, 22, 30, 38,  7, 37},
	{53, 39, 57, 14, 30, 63, 20, 49},
	{61, 35, 46, 21, 22, 14, 36, 13},
	{49, 58, 48, 43, 63, 39, 14, 11},
	{33,  1, 11, 25, 63, 19, 34, 37},
	{46,  7,  9, 52, 31, 61, 14, 29},
	{52,  2, 34,  6, 46, 60, 37, 14},
	{10, 11, 41, 53, 26, 63,  2, 51},
	{13, 15, 36,  4, 41,  1, 20, 42},
	{15, 32,  2, 42, 55, 21,  9, 28},
	{ 9, 62, 10, 51, 44,  0, 40, 59},
	{30, 12,  2, 47, 19, 60, 37, 41},
	{ 2,  7, 34, 30, 51, 31, 22, 57},
	{50,  7, 43, 27, 47,  9, 34, 21},
	{45, 30, 25, 20, 49, 18,  1, 22},
	{62, 12, 49,  8, 52, 43,  6, 18},
	{18, 38, 63, 17,  7, 54, 25, 59},
	{60, 17, 54,  4, 44, 51, 18, 31},
	{28, 60,  3, 13,  4, 22, 36,  6},
	{31, 19, 11, 52, 63, 18,  2, 43},
	{20, 61, 23, 55, 62, 32, 27, 24},
	{26, 51, 62, 35, 28, 30, 50, 19},
	{44, 53, 40,  4, 33, 12, 17, 57},
	{57, 12,  1, 31, 40, 59,  2, 52},
	{29, 51, 52, 28, 44, 11, 58, 27},
	{10, 16, 28, 21, 52, 45, 29, 60},
	{15, 60, 56,  1, 33, 45, 51, 39},
	{50, 39, 34, 25, 35, 32, 43, 59},
	{35, 57, 15, 29, 26, 55, 27, 18},
	{51, 31,  2, 22, 56, 11, 35, 17},
	{ 2, 49, 51, 24,  8,  3, 13,  1},
	{29, 15, 57, 50, 46, 11, 49, 34},
	{43,  2, 55, 62, 34, 16, 50, 60},
	{51, 22, 17, 10, 39, 47, 14, 55},
	{12, 16, 45,  7, 14, 37, 59,  4},
	{36, 10, 24, 34,  1, 16, 50, 35},
	{29, 54, 59, 20, 37, 58, 38, 26},
	{23,  7,  5, 24, 10, 34, 60, 55},
	{36, 49, 42, 16, 60, 55, 11, 46},
	{26, 31, 54, 60, 11, 45, 41, 25},
	{ 4, 56, 62, 27, 55, 10, 25, 61},
	{60,  3, 35, 19,  4, 15, 28, 32},
	{ 8, 13, 39, 57, 28,  5, 19,  9},
	{61, 38, 52, 23, 32, 35, 20, 44},
	{ 6, 18, 33,  2, 40, 39, 24, 32},
	{ 2, 43, 61, 50,  6, 33,  8, 57},
	{62, 63,  0, 26, 36, 58, 46, 25},
	{56,  6, 12, 26, 44, 50, 49, 32},
	{43, 13, 47, 61, 33,  2, 31, 53},
	{63,  3, 26,  4,  0, 52,  5, 24},
	{38, 46, 63, 51, 32, 28, 56, 20},
	{47, 22, 44,  4, 59, 36, 55, 56},
	{42, 40, 59, 63, 55, 15, 30, 20},
	{60, 48, 25, 59,  9, 14,  4, 52},
	{35, 55, 54, 52, 38, 20, 63,  9},
	{51, 39, 30,  4, 52, 28, 63, 13},
	{36, 10, 30, 24, 46, 20, 49, 32},
	{25, 55, 13, 34, 40,  0, 62,  9},
	{50, 26, 14, 12, 28,  1, 25, 41},
	{44, 40, 58, 10, 50, 36, 18, 49},
	{60, 63,  0, 34, 46, 20,  8,  5},
	{42,  3, 34,  2, 15, 23, 25, 45},
	{26, 50,  9, 44, 49, 47, 23, 14},
	{61,  9, 43, 28, 10, 37, 25, 29},
	{ 6, 26, 33, 29, 18, 20, 19, 48},
	{ 2,  6, 57, 16, 38, 30, 40, 35},
	{44, 29, 24, 61, 20, 32, 39, 36},
	{51, 43, 56, 53, 44, 48, 61,  8},
	{14, 50, 33, 24, 59, 16, 23, 63},
	{ 0, 45, 44, 46, 36, 54, 31, 55},
	{ 9, 58, 53, 31, 32, 24,  4, 23},
	{16, 26, 42, 50, 61, 25, 17, 24},
	{ 4, 11, 47,  5, 56,  2, 14,  0},
	{ 2, 17,  1, 60, 32,  4,  7, 21},
	{40,  6, 49, 24,  9, 12, 56,  4},
	{45, 38, 60, 59, 24, 44, 23, 30},
	{10,  1, 39, 50, 62, 51, 12, 17},
	{25,  1, 42, 46, 43, 48, 23, 33},
	{18,  7, 31, 43, 13, 19, 42, 39},
	{41, 24, 38, 54,  5, 12, 34, 43},
	{23, 16, 12, 38, 43, 40, 27,  6},
	{ 4, 28, 60, 52, 17, 32, 42, 53},
	{55, 57,  9, 37, 53, 47, 45, 13},
	{12, 22, 17,  7, 38, 13, 16, 61},
	{48, 39, 12,  9, 47, 11, 61, 20},
	{13,  6, 32, 22, 49, 23, 62, 51},
	{ 6, 47, 11, 41,  4, 48, 35, 38},
	{27, 23,  1, 47, 20, 51, 16, 52},
	{ 7, 16, 25, 58, 46, 31, 59, 18},
	{25, 18, 50, 56, 42, 49, 19, 38},
	{15,  5, 12, 54, 30, 39, 36, 22},
	{28, 19, 43, 50, 13, 27, 56, 61},
	{25, 19,  2, 48, 15, 44,  1,  6},
	{42, 29, 12, 38, 63, 53, 22, 23},
	{45, 11, 30, 28, 57, 31, 12, 24},
	{11, 35, 33, 31, 21, 50, 49, 16},
	{13, 46, 48, 56, 28, 21,  2, 11},
	{53,  9, 60, 19, 56, 45, 31, 57},
	{36, 19, 57, 52, 46, 11,  5,  2},
	{25, 15, 61, 49, 53,  5, 19, 63},
	{46, 18, 12, 57, 22,  7, 33,  6},
	{28, 54, 37, 48, 51, 12, 49, 39},
	{10, 58, 55,  3, 26, 31, 30, 27},
	{36, 24, 27, 63,  6, 56, 41, 45},
	{ 5, 20, 19, 39, 61, 31,  4, 58},
	{11,  4, 32, 26,  8, 63, 10, 39},
	{32, 59,  5, 15, 34, 52, 29, 17},
	{ 1, 23,  9, 59, 31, 12,  2, 50},
	{43, 59, 31,  6,  9, 15, 30, 46},
	{54, 27,  7,  3, 60, 20, 28, 61},
	{10, 56, 38,  9, 20, 35, 52, 11},
	{50, 39, 31, 19, 51, 54, 49, 36},
	{26, 18,  2, 40, 35, 32, 21, 28},
	{38, 33, 55, 21, 41, 19, 35,  8},
	{38, 21, 34, 23, 37, 41, 53, 33},
	{10, 40, 31, 57,  2, 48, 18, 20},
	{33, 61, 40, 19, 27,  8, 48, 17},
	{57, 10, 54,  1,  2, 37, 42, 13},
	{32, 30, 27, 39, 18,  2,  4, 31},
	{21, 39, 38, 31, 12, 43, 44, 28},
	{22, 10, 31, 40, 54, 27, 28, 38},
	{13, 57, 52,  9,  7, 15, 59, 61},
	{14, 11, 62, 63,  5,  3, 25, 61},
	{42, 50, 45, 23,  6, 32, 22, 55},
	{25, 26,  7, 11,  8, 36, 37, 10},
	{44, 45, 13, 25, 53, 59, 23, 32},
	{20, 18, 37, 58, 24, 53, 45,  3},
	{35, 34, 42,  3, 27, 18, 43,  2},
	{63, 16, 32,  5, 51,  8, 10,  4},
	{22, 26, 57, 41,  1, 17, 60, 29},
	{40, 47, 31, 28, 16, 12, 36, 17},
	{26, 61, 14, 22,  9, 46, 40, 13},
	{57, 50, 11, 36, 38, 24, 45, 47},
	{13, 43, 52, 39, 45, 47, 33, 30},
	{10, 57,  8, 18, 20, 44, 11, 54},
	{25, 52,  2, 43,  6, 56, 19, 14},
	{ 1, 31, 20, 36, 33, 55, 19,  5},
	{49, 41, 57, 28,  1, 44, 36, 55},
	{11, 49,  7, 14, 32, 33, 62, 17},
	{14, 49, 45, 47, 48, 27, 37, 23},
	{ 1, 16,  0, 58,  2, 53, 61,  5},
	{ 8, 55, 36,  3, 47, 12, 21,  1},
	{14, 28, 60, 27, 39, 42,  9, 10},
	{ 3, 21, 33, 39, 28, 60,  8, 13},
	{12, 22,  7, 34, 23, 60, 49, 63},
	{37, 25, 56, 39, 51, 14, 34, 49},
	{56, 15, 59,  8, 26, 61, 43, 39},
	{50,  4,  2, 60, 16, 24, 39, 31},
	{14, 23,  2, 51, 56, 40, 10, 26},
	{30, 44, 17, 11, 39, 15,  5, 48},
	{40,  2, 15, 10, 52, 13, 51, 39},
	{22, 55, 34, 17, 60, 41, 25, 12},
	{36, 16,  5, 41, 33, 59, 24, 22},
	{47, 37, 15, 35, 56,  5,  9, 54},
	{27, 63, 44, 12, 59, 17, 25, 40},
	{27, 16, 38, 42,  7, 50, 57, 44},
	{58,  6, 44, 38, 22, 30, 28, 31},
	{13, 30,  7, 20, 24, 44, 47, 16},
	{48, 31, 13, 63, 25,  2, 40, 60},
	{ 4, 47, 41, 34, 46, 45, 50,  5},
	{59, 41,  7, 44,  9, 57, 36, 40},
	{57, 40,  3,  6, 11, 51,  4, 16},
	{ 0, 48, 32, 30,  3, 16, 28, 61},
	{39, 26, 57, 53, 62, 37, 25, 23},
	{16, 15, 58, 49, 10, 63, 24, 30},
	{46, 63, 58, 35, 57, 42,  5,  0},
	{55, 40, 54, 30, 35, 31, 28, 21},
	{50, 60, 33, 22, 11, 46,  4, 45},
	{14, 16, 36, 57, 39, 26, 56, 32},
	{44, 35, 32, 13, 52, 28, 14, 62},
	{41, 40, 22, 61, 32,  6, 28, 54},
	{ 9, 37, 18, 29, 35, 21, 44, 28},
	{25, 27, 33, 37,  6, 53, 59, 36},
	{54, 19, 63, 40, 10, 30, 62,  3},
	{55, 21, 13, 32, 47,  9, 35, 18},
	{59, 63, 15,  7, 33, 46, 52, 41},
	{45, 37, 52, 31,  9, 19, 60, 14},
	{ 3, 21, 25, 17, 60, 29, 53, 62},
	{55, 30, 50, 11, 51, 49, 61, 33},
	{19, 39,  8, 32, 44,  0, 29, 20},
	{34, 35, 42, 41,  5, 47, 37, 61},
	{23, 43, 38,  3, 54, 59, 46, 37},
	{49, 16, 58, 54, 59, 39, 24,  1},
	{33, 31, 14, 55, 46, 12, 23, 44},
	{39, 59,  3, 33, 37, 55, 21, 57},
	{33, 51, 23, 62, 10, 42, 58, 60},
	{ 1, 39, 16, 55, 20,  6, 14, 29},
	{ 3, 32,  1, 57,  9, 61, 14, 18},
	{39, 58,  5,  1, 62, 41, 53, 13},
	{62, 24, 21, 55,  9, 34, 36, 52},
	{22, 63, 49, 60, 33, 39, 58, 62},
	{13,  3, 55, 31, 50, 49, 41, 60},
	{10, 37,  9, 43, 34, 49, 52, 21},
	{24, 21, 33,  6, 10, 37, 48, 12},
	{12, 26,  5,  3, 53,  8, 23, 63},
	{14, 15, 62, 25, 33, 38, 13, 18},
	{59,  0, 13,  4, 56, 52, 43, 12},
	{16, 33, 43, 32, 53,  3, 15, 49},
	{13, 37,  0, 20, 46, 18, 57,  4},
	{29, 14, 51,  5, 20, 54, 23, 32},
	{25, 31,  1,  6, 13, 22,  4, 32},
	{19, 36, 22, 25, 51, 38, 54, 16},
	{35,  8,  4, 15, 10, 51, 54, 18},
	{ 6, 29, 61, 56, 18, 33,  5, 22},
	{26, 43,  5, 33, 29,  4, 46, 44},
	{45, 17, 63,  2, 58, 41,  8, 19},
	{60, 25, 14,  8,  5, 54, 29, 24},
	{ 0, 15,  7, 20, 53, 34, 32, 30},
	{31, 41, 51, 30, 43, 34,  8, 13},
	{13, 33, 63,  4, 15, 14,  2, 26},
	{38, 16, 60, 53,  1, 57, 44,  7},
	{39, 36, 32,  0, 10, 63, 21, 56},
	{ 8, 12, 47,  9, 14, 61, 34, 56},
	{63, 11, 45,  4, 33, 35, 34, 36},
	{27, 10, 14,  2, 32, 50, 34, 13},
	{ 5, 47, 52, 35, 22, 58, 45, 11},
	{52, 45, 59, 26, 25, 38, 21, 56},
	{24, 15, 23, 25, 47, 18, 40, 54},
	{12, 21, 50,  1, 23, 56, 27, 33},
	{11, 21,  0, 18, 44, 59, 36,  9},
	{15, 61, 22, 54, 18, 32, 43, 10},
	{ 5,  9,  0, 62, 22, 58, 10, 35},
	{29, 13, 45,  7, 19, 15, 36, 20},
	{ 7, 35, 30, 18, 23,  6, 33, 57},
	{63, 49, 55, 38, 35,  3, 14, 60},
	{42, 60, 34, 47, 20, 41, 35,  9},
	{42, 44, 53, 45, 30, 40, 19, 11},
	{ 9,  7, 41, 24, 45, 38,  2, 18},
	{58, 44, 62,  5, 57, 42, 61,  2},
	{52, 47, 30, 29, 25, 18, 34, 44},
	{ 7, 48, 51, 45, 54, 58, 43,  1},
	{ 8, 57, 52, 53,  2, 44, 60, 62},
	{13, 61, 52, 34, 51, 15, 54, 31},
	{57, 26, 31, 20, 36, 52, 46, 35},
	{22, 38, 35, 40, 28, 20, 43, 25},
	{60, 53, 31, 14, 56, 59, 24, 15},
	{ 4, 16, 13, 40, 21, 39, 44, 49},
	{28, 39, 38, 33, 48, 42, 61, 53},
	{53, 18,  0,  7,  3, 15, 45, 36},
	{ 0, 39, 11, 36, 17, 51, 46,  9},
	{56, 37, 49, 13, 61, 32, 63, 59},
	{39, 14, 48, 18,  8, 20, 10, 54},
	{51, 53, 20, 41, 43,  1, 57, 24},
	{56, 44, 33, 39, 13,  6,  0, 26},
	{48, 42, 38,  7, 43, 22, 26, 45},
	{ 5, 43, 45, 37, 31, 42, 19, 15},
	{60, 29, 20, 59, 27, 47, 51, 56},
	{42, 35, 21, 20, 36, 31, 30,  9},
	{13, 49, 27, 47, 48, 52, 51, 41},
	{42, 11,  7, 22, 27, 57,  3,  4},
	{13, 10, 46, 39, 19, 43, 47,  7},
	{16, 23,  2, 37,  7, 63, 33, 38},
	{54, 12, 39,  9, 48, 10, 23, 35},
	{62,  5, 52, 18, 28, 24, 51, 56},
	{44, 39, 20, 53, 35, 57, 15, 38},
	{42, 49, 25, 39, 41, 36, 13, 31},
	{33, 16, 54,  4, 20, 34, 35,  5},
	{31,  0, 56, 15, 36, 20, 28, 42},
	{30,  8, 12, 42, 52, 15, 38, 28},
	{24, 56, 25,  8, 48, 21, 19, 52},
	{23, 40, 45, 20, 27, 39, 15, 14},
	{25, 32, 10, 11, 47, 36, 43,  5},
	{ 3, 31, 41, 47, 58, 25, 33, 45},
	{62, 22, 43,  2,  3, 25, 13, 17},
	{34,  6, 29, 21,  1, 19, 28, 42},
	{19, 32, 20, 17, 39, 54, 35, 25},
	{16, 45, 44, 43, 18, 23, 20, 58},
	{20, 10, 15,  5, 35, 31, 49,  7},
	{63, 21, 19, 35, 48, 40, 62,  3},
	{36, 59, 55, 38,  9,  1, 17, 60},
	{ 1, 43, 14,  0, 62, 12, 44, 34},
	{30, 56, 14, 28, 45, 22,  2, 55},
	{43, 29, 63, 34, 16,  6, 15, 60},
	{18,  7, 34,  4, 14, 60,  6, 43},
	{ 8, 39, 44,  0, 13, 20, 50, 41},
	{35,  6, 30, 59, 20, 44,  8,  9},
	{24, 37, 35,  0, 11, 17, 61, 12},
	{14, 57, 19, 63, 42, 30, 49, 62},
	{30, 47, 27, 40, 17, 53, 56, 15},
	{24, 16, 56, 13, 15, 12, 43, 46},
	{34, 56, 36,  8, 35, 37,  3, 26},
	{49,  9, 61, 13,  4,  8, 21, 43},
	{23, 60, 28, 51, 18, 47, 44, 13},
	{44, 16, 62, 19, 55, 50, 18, 14},
	{39, 12,  4, 57, 21, 60, 49, 20},
	{41, 22, 26,  3, 46, 30,  1, 52},
	{18, 58, 26, 15, 21, 49, 22, 12},
	{27, 63, 31, 36, 33, 59, 37, 13},
	{62, 32,  5, 31, 44,  6, 34, 33},
	{30, 55, 42, 45, 40,  2, 44, 26},
	{11, 62, 44, 30,  7, 14, 50, 20},
	{52, 29, 22, 25, 27,  5, 32, 63},
	{44, 55, 52, 40, 29, 21, 34, 27},
	{17, 33,  6, 38, 62, 48, 57, 36},
	{15, 47, 62, 41, 28, 51, 56, 30},
	{38, 33, 39,  8, 32, 23,  3,  5},
	{41,  1, 54, 34, 38,  3, 47, 53},
	{58, 27, 12, 52, 33, 42, 39, 28},
	{ 2, 52,  0, 16,  4, 34, 25, 54},
	{58, 35, 39, 29,  3, 40, 16, 30},
	{40, 49, 24,  3, 62,  7,  6, 43},
	{ 5, 36,  0, 38,  2,  9, 25, 16},
	{55, 40,  0,  2, 50, 18, 60, 25},
	{20, 33, 32, 34,  8, 41, 11, 42},
	{20, 39, 21, 49,  5, 27,  0,  3},
	{48, 61, 34, 52, 25, 32, 53, 40},
	{49, 30, 60,  7, 12,  5, 50, 34},
	{ 1, 60, 23, 37, 26, 24, 38, 16},
	{51, 33, 20, 62, 26, 53, 45, 58},
	{61, 34, 16, 27, 51, 58, 37, 36},
	{38, 31, 22, 28, 50, 53, 16, 35},
	{ 6, 16, 11, 59, 46, 41, 39, 61},
	{35, 38, 48, 49, 46, 44, 21, 28},
	{ 0, 17,  3,  7, 29,  5,  9,  8},
	{56, 14, 54, 57, 37,  8, 13, 61},
	{38, 48, 28,  5, 30, 17, 16, 19},
	{39,  0,  8, 60, 48, 30, 57, 18},
	{51,  5, 18, 17, 20, 55, 38, 44},
	{39,  7, 13, 11, 15, 60, 32, 28},
	{49, 41,  5, 46, 61, 25, 39,  1},
	{51, 25,  6, 15, 59,  3, 28, 62},
	{ 3, 51, 37, 62, 58, 13, 15, 35},
	{56, 35, 34, 49,  2, 33,  5, 29},
	{28, 45, 32, 15, 55, 50, 34,  4},
	{31, 43, 18, 44, 17, 26, 41, 30},
	{53, 26, 63, 12, 52, 10, 58, 32},
	{28, 34, 61, 60, 22, 57, 13, 47},
	{28, 49, 55, 32, 16, 42,  7,  9},
	{42, 58, 24, 17, 55,  8, 25,  6},
	{32, 22, 28,  9, 60, 61, 45, 16},
	{36, 59, 53, 14, 54, 37,  5,  4},
	{41, 16,  3, 56, 37, 15, 54, 11},
	{33,  8, 31, 20, 51,  5,  0, 15},
	{48, 43,  3, 62, 27,  2, 32, 16},
	{49, 61, 12, 19, 45,  1, 42, 44},
	{13, 22, 27, 63, 17, 47,  7, 14},
	{27, 29, 63, 57,  0, 55, 40, 11},
	{ 0, 59, 53, 43, 47, 33,  6, 28},
	{26, 28, 37, 50, 41, 21, 47, 55},
	{62, 59,  2, 25, 34, 38, 22,  6},
	{39, 30, 47, 41, 60, 33, 48,  9},
	{13, 18, 54, 49, 24,  3, 32,  6},
	{57, 21, 49, 56, 32, 27, 17,  8},
	{17, 55,  7,  4,  5, 23, 37, 19},
	{31, 37, 11, 52, 13,  7, 34, 49},
	{24, 45, 53,  7, 49, 14, 61, 32},
	{56, 26, 36, 13, 24,  4, 45, 32},
	{ 6, 20, 44, 14, 46, 28, 23, 15},
	{13, 63, 52, 32, 59, 48, 21,  5},
	{43,  6, 53, 55, 25, 23, 50, 13},
	{38, 23, 50, 16, 32, 25, 21, 51},
	{46, 29, 57, 50, 18, 30, 34,  1},
	{10,  1, 37,  8, 20, 16, 46, 25},
	{36, 48,  1, 45, 49, 63, 61, 62},
	{34, 57, 19, 45, 29, 53, 16, 18},
	{52, 51, 40, 34, 57, 49, 21, 18},
	{37, 15, 22,  6, 62, 60, 33, 34},
	{20,  5, 25, 36, 26, 50, 34,  3},
	{35,  0,  6, 15,  8, 52, 10, 32},
	{61, 25, 32, 21, 49, 11, 12, 54},
	{53,  4, 34, 43, 28, 62, 58, 13},
	{52, 62, 22, 50, 10, 11, 27,  6},
	{13,  2, 21, 35,  7, 33, 38, 15},
	{22, 45, 52, 29, 23, 41, 13, 20},
	{32,  2, 27, 48, 21, 42,  6, 35},
	{26, 21, 63,  4, 50, 13,  1, 35},
	{32, 50,  6,  5, 40, 27, 55, 56},
	{20, 33, 47, 30, 10, 27, 12, 55},
	{32, 57, 24, 33, 34,  7, 15, 16},
	{18, 24, 55, 54, 13,  1, 34, 51},
	{22,  4, 20, 42, 28, 36, 43,  1},
	{19, 12, 28, 45, 33, 31, 52, 35},
	{40, 33, 41, 29, 60, 59, 62, 55},
	{29, 22, 19, 46, 32,  1,  4, 40},
	{31, 15, 63, 26, 22, 24, 18, 21},
	{53,  7, 23, 29, 26, 51, 11, 14},
	{56, 50,  7, 55, 23,  0, 37, 13},
	{ 0, 34, 62, 52,  6, 40, 19, 31},
	{43, 38,  3, 49, 13, 32, 54, 14},
	{52, 61, 53, 32, 60,  6,  8, 47},
	{41, 60, 59, 21,  1, 19, 12,  2},
	{22, 55, 59,  6,  3, 40, 31, 17},
	{53, 25, 20, 58,  3, 50,  9,  2},
	{32, 21, 13, 53, 34, 22,  0, 37},
	{41, 35, 18, 17, 62,  3,  6, 10},
	{60, 14,  6,  7, 24,  1, 18,  3},
	{17, 21, 49, 45,  4, 23, 33, 12},
	{13, 43, 16, 20, 61, 63, 47,  4},
	{11, 48, 34, 22,  4,  3,  9,  1},
	{45, 44, 42, 33, 20, 31, 43,  8},
	{ 4, 21, 63, 61, 62, 26, 32, 19},
	{ 3,  9, 42, 10,  8, 24, 18, 59},
	{63, 16, 28, 38, 22, 17, 34, 58},
	{39, 54, 42, 16,  7, 40, 33, 37},
	{63, 26, 55,  3, 10, 11,  1, 59},
	{32, 12, 36,  4, 44, 30, 18, 54},
	{ 2,  7, 51, 37, 36, 34,  8, 53},
	{13, 25,  0, 48, 50, 42, 33, 46},
	{61,  1,  6, 54, 27,  8, 30, 59},
	{16, 54, 11, 23, 15, 63, 60,  5},
	{51,  3,  4, 63, 27, 36, 25, 61},
	{62, 23, 43, 58, 59, 29, 12, 54},
	{26, 31, 36, 16, 15, 32, 54, 60},
	{ 3,  7,  9, 31, 24, 53, 47, 60},
	{ 4, 23, 49, 22, 50, 51, 11, 62},
	{37, 30,  2, 34, 12, 46, 40,  9},
	{19, 27, 20, 18, 21, 13, 50, 58},
	{ 6, 10, 62, 49, 33, 28, 53, 46},
	{23, 16, 10, 61, 54, 63, 26, 55},
	{22, 28, 23, 55, 29,  3, 51, 10},
	{ 2, 39, 52, 58, 36, 49, 30,  7},
	{41, 48,  6, 62, 61, 29, 50, 57},
	{59, 17, 37, 26, 63,  5, 18, 52},
	{28,  5, 26, 20, 19, 31,  3,  0},
	{41,  9, 30, 40, 44, 35,  6, 12},
	{ 7, 50, 57, 41, 61, 46,  1, 19},
	{ 1, 21, 28, 59, 14, 32, 37, 27},
	{18, 33, 58, 42, 47, 44, 60,  2},
	{23, 27,  8, 56, 28, 31, 32, 12},
	{54, 52, 41, 34, 23, 33, 37,  5},
	{29, 53, 35, 58,  5,  1,  0,  8},
	{19, 56, 61, 18, 63, 11, 42, 57},
	{28, 54, 21, 33, 56, 63, 40, 11},
	{45, 21, 31, 55, 16,  0, 23, 22},
	{40, 17, 37,  4,  9, 38, 14, 43},
	{48, 50, 25,  5, 43, 27, 16, 29},
	{49, 39,  9, 34, 29, 21, 53, 10},
	{19, 42,  5, 28,  4, 48, 26, 15},
	{40, 14, 19, 17, 62, 25,  7, 32},
	{57, 41, 50, 35, 45, 48, 34, 39},
	{16, 60, 24, 28, 37,  0, 46, 45},
	{50, 46, 28, 57, 51,  9, 61, 13},
	{32, 27, 56, 33, 10, 44, 57, 42},
	{44, 14, 59,  7, 36,  3, 37, 57},
	{40, 32, 59,  8, 58, 18,  0,  6},
	{46, 55, 39, 37, 38, 34, 57,  7},
	{13,  6, 49, 33, 36, 55, 61, 37},
	{35, 32, 63, 44, 27, 39, 20, 61},
	{63, 50, 49, 27,  7, 22, 41, 19},
	{25, 46,  2, 23,  9, 34, 57, 47},
	{ 6, 44, 61, 35, 32, 63, 30, 27},
	{ 4, 19, 37, 25, 30, 14, 55, 38},
	{62, 58, 28, 35, 56,  4, 60, 31},
	{21, 53, 52,  3,  6, 55, 12, 48},
	{11, 56, 21, 53, 54, 47, 29,  0},
	{41, 57, 44, 30, 61, 22, 15, 25},
	{ 7,  3,  6, 26, 22, 37, 44, 47},
	{25, 19,  4, 41, 17, 34, 24, 38},
	{31, 61, 58, 60, 16, 14,  4, 59},
	{10,  8, 34, 20, 36, 62, 21, 25},
	{59, 12, 10, 25,  9, 14, 35, 23},
	{ 1, 57, 50, 11,  7, 15, 39, 29},
	{ 8, 62, 28, 52, 24, 55, 12, 57},
	{31, 14, 34, 61, 22, 23, 24, 20},
	{62, 15, 31, 60, 28, 21, 43, 11},
	{25, 22, 42, 62,  4, 31, 29, 24},
	{27, 29, 19,  7, 60, 50, 57, 39},
	{ 7, 32, 51, 53, 43, 47,  3, 49},
	{51, 49, 30,  3, 33, 59, 21,  1},
	{14,  5, 26, 12, 29, 33, 57, 34},
	{48, 61, 51, 13, 10, 53, 32, 11},
	{41, 56, 55,  2, 52, 10, 15, 30},
	{59, 40, 42, 61, 33,  5, 39, 48},
	{12, 25, 63, 21,  1, 18, 29, 44},
	{25, 11, 45, 15,  2, 38, 13, 56},
	{17, 39, 59, 32, 15, 63, 20,  0},
	{42, 30, 19, 48, 53, 21, 13, 34},
	{48, 31, 50, 30, 55,  9, 17, 41},
	{47, 63, 28, 52, 10, 34, 32, 53},
	{51, 12, 27, 18, 14, 30, 52,  1},
	{35, 62, 58, 27, 48, 20, 32, 25},
	{57, 40, 37, 49, 34, 15, 19,  1},
	{61, 24,  5,  2, 26,  7, 62, 50},
	{28, 32, 21, 26,  9, 62,  5, 35},
	{63, 44, 30, 17, 33, 61, 42, 11},
	{ 3, 40, 38, 56, 19, 52, 63,  1},
	{31, 44,  2, 22, 40, 63, 26,  8},
	{60, 24, 58, 38, 33, 43, 59, 12},
	{31, 30, 56,  2, 62, 24, 22, 58},
	{61, 15, 48, 56, 35, 57, 10, 23},
	{15,  4, 36, 35, 54,  3, 29,  9},
	{12, 24,  0, 29, 51, 13, 38, 53},
	{26, 31, 46, 52, 14, 30, 42,  7},
	{12, 29, 61, 13,  7,  3, 37, 10},
	{19, 45,  5,  8, 50, 25, 27, 22},
	{ 0,  6, 22, 28, 58, 46, 16, 38},
	{21, 54, 10, 28, 31, 44,  5, 50},
	{23, 25, 52, 59, 12, 32, 39, 57},
	{ 9, 10,  1, 21, 27, 19, 23, 46},
	{42, 15, 55, 41, 27,  9,  0, 40},
	{ 4, 19, 14, 34, 21, 61, 16, 26},
	{20,  1, 57, 14, 32, 37, 55, 12},
	{43, 18, 22, 42, 14, 54, 48, 37},
	{17,  2, 16,  7, 42, 14, 30, 51},
	{46,  5, 19, 30, 24, 35, 62, 50},
	{40, 61, 56,  3, 35, 42, 63, 19},
	{15,  2, 12, 41, 23, 11, 51, 30},
	{15, 39,  9, 19, 56, 55, 10, 48},
	{38,  7, 28, 29, 39, 33, 32,  6},
	{31, 56, 28, 35, 63, 41,  2, 51},
	{35,  7,  0, 21, 44, 48, 31, 45},
	{30,  6, 33, 56, 26, 16, 36, 12},
	{13, 47, 50,  1, 41, 16, 53, 36},
	{50, 56, 41, 51, 17, 25,  9, 47},
	{19, 33, 21, 48, 18, 59,  5, 56},
	{33, 56, 37, 58, 34,  5, 38,  4},
	{20,  5, 55, 43, 23,  4, 35, 59},
	{55, 40, 18, 28, 25, 54, 17, 41},
	{16, 22, 29, 58, 50,  1, 44, 61},
	{23, 48, 55, 21,  4, 54,  8, 12},
	{32, 21,  6, 35, 34, 28, 24, 61},
	{58, 18, 41, 13,  5, 22, 37, 60},
	{ 8, 21, 39,  9, 40, 17, 54, 43},
	{21, 54, 18, 52, 15, 17, 58,  7},
	{39, 63,  4, 20, 13, 21, 10, 58},
	{24, 37,  0, 47, 51, 53,  9, 15},
	{22, 29, 25, 30, 58, 26, 12, 42},
	{16, 33, 30, 46, 36, 39, 47, 44},
	{37, 54, 57, 39, 21, 63, 52,  5},
	{54, 17, 40, 30, 28, 27, 20, 13},
	{54, 47, 18, 50, 27, 36,  2, 55},
	{49, 28, 53,  5, 13, 45,  7, 60},
	{23,  0,  1, 49, 47, 39, 21, 57},
	{36, 34,  3, 55, 27, 21, 12, 28},
	{ 9, 28, 58, 26, 35, 41, 32, 47},
	{54, 28, 27, 40, 47, 35, 51, 22},
	{24,  2, 17, 20, 21, 53, 15, 32},
	{34, 32, 52,  3, 25, 46, 37,  0},
	{45, 60,  6,  5, 40, 24, 57, 20},
	{58, 21, 43, 39, 56, 20, 24, 53},
	{41,  2, 14, 44, 11, 58, 20, 13},
	{35, 34, 59, 12, 21, 50, 55, 45},
	{ 4, 11, 52, 48, 33, 57, 30, 34},
	{30, 35,  8, 49, 31, 62, 23, 16},
	{18, 39, 25,  2, 43,  6,  8,  0},
	{14, 53,  1, 46, 54, 45, 34, 61},
	{39, 17, 57, 41, 58,  8, 38,  7},
	{40, 44, 23,  3, 34, 55, 29, 32},
	{ 1, 27, 50,  2, 63, 26, 60, 21},
	{32, 36,  5, 56, 23, 34, 13, 31},
	{21, 12, 35,  8, 29, 48, 18, 32},
	{18,  7,  0, 48, 38, 61, 35, 62},
	{37, 26, 31, 17, 41,  2, 20,  3},
	{ 7, 60, 39, 53, 55, 38, 41,  2},
	{14,  9, 32, 58, 33, 31, 18, 23},
	{48, 52, 44,  6, 40, 54, 14, 46},
	{18, 51,  8, 29, 58, 41, 28, 36},
	{41, 49,  1, 25,  8,  7, 51, 20},
	{ 6,  9,  8, 51, 36, 25,  2, 20},
	{20, 35, 57, 48, 30,  5, 54,  4},
	{36, 23, 57,  2, 15, 44, 16, 60},
	{32, 46, 39, 17, 42,  3, 38,  4},
	{60, 44, 28, 45, 14, 56, 63, 43},
	{ 1, 47, 34, 42, 60, 37,  7, 45},
	{23, 10, 40, 53, 33, 25,  0, 60},
	{30,  8, 10, 36, 62, 53, 13, 14},
	{ 7, 32, 36,  0, 39, 24, 49, 42},
	{30, 44, 56, 54,  4, 21, 23, 49},
	{40, 26,  1, 56, 19,  0, 15,  7},
	{63, 17,  4, 45,  5, 25, 56,  6},
	{41, 52,  9, 50, 35,  7, 28, 57},
	{51, 42, 40, 28, 46, 25, 30, 58},
	{ 9, 13, 10,  8, 14, 53, 23, 34},
	{50, 13, 56, 23, 18, 32, 46, 19},
	{26, 25, 36, 43, 31, 40, 37, 23},
	{20, 46, 23, 49, 32, 53, 42, 50},
	{54, 12, 32, 25, 50,  2, 61, 60},
	{48, 55,  1,  9, 54, 18, 20, 35},
	{ 6, 34, 45, 58,  8, 23, 26, 46},
	{28, 39,  9, 55, 12, 15, 25, 22},
	{ 2, 37,  0, 56, 42, 26,  3, 21},
	{43, 15, 60, 34,  2, 52, 57, 61},
	{51, 20,  6, 24, 18, 33, 63, 22},
	{ 3, 14, 48, 16, 10, 33, 28,  8},
	{23, 57, 62, 18, 29, 43, 49, 56},
	{34, 21, 46, 16,  5,  0, 27, 13},
	{21, 18, 22, 20, 19,  4, 38, 41},
	{ 4, 57, 58, 28, 30, 27, 23, 26},
	{ 8, 17, 33, 21, 40,  4, 34,  6},
	{18, 41, 59, 36, 25, 33, 39, 54},
	{62, 50,  7, 37, 23, 11, 36, 15},
	{28, 34, 31, 42, 39, 52, 19, 18},
	{ 3,  7, 26, 47, 51, 11,  4, 33},
	{55,  9, 47, 62, 58,  8, 59, 19},
	{31, 38, 59, 16,  8, 22, 24,  6},
	{23, 21, 11, 58, 41, 40, 29, 31},
	{16, 29,  2, 31,  3, 54, 55, 28},
	{46, 62, 18, 58, 10, 12, 53, 27},
	{26,  1, 15, 12, 21, 50,  2,  9},
	{30,  4, 36, 59, 25, 19, 63, 12},
	{39, 35, 54, 41,  8, 56, 58, 27},
	{ 3, 40, 43, 54, 23, 12,  1, 35},
	{20, 49, 19, 48, 35, 45, 27,  7},
	{49,  6, 55, 34, 52, 11, 40, 10},
	{59, 15, 29,  5, 50, 28, 10, 37},
	{62,  8, 60, 55, 17, 14, 24, 25},
	{49, 20, 56, 12,  2, 18, 34,  8},
	{39, 48, 58, 16, 57,  4, 12, 60},
	{37, 19, 62, 60, 59, 10, 41,  0},
	{23, 44, 58, 17, 38,  1, 36, 13},
	{11, 59, 58, 62, 60, 47,  2, 50},
	{23,  2,  3, 33, 29, 39, 21, 63},
	{61, 32,  0, 29, 44, 45, 37, 30},
	{60, 11,  5, 10, 48, 32, 34, 13},
	{61, 35, 12, 24, 37, 29, 55, 17},
	{47, 36, 38, 53, 21, 17, 11, 12},
	{11, 13,  2, 38, 57, 31, 15,  3},
	{63, 32,  9,  4, 43, 20, 22, 13},
	{37, 25,  5,  1, 48, 49, 46, 52},
	{ 5, 38, 20, 50, 10, 59, 49,  1},
	{39, 15, 46, 21, 47, 10,  5,  7},
	{ 5,  7, 32, 14,  9, 26, 47, 12},
	{ 3, 51, 19, 24, 50, 52, 11, 41},
	{54, 48, 58, 16, 37, 55, 21, 15},
	{ 6, 46, 58, 40, 43, 32, 53, 18},
	{61, 51, 19, 47, 63, 28, 26, 38},
	{13, 53, 25,  8, 20, 32,  9, 42},
	{14,  8, 61, 51,  0, 39, 22, 53},
	{61, 27, 17, 60,  9, 38, 21, 49},
	{62, 19, 31,  6, 58, 52, 53, 34},
	{ 2, 33, 45, 27, 60, 18, 59, 53},
	{20, 60, 22, 63, 23, 46, 19, 58},
	{56,  0, 27,  2, 17, 34,  5,  4},
	{54,  4, 51, 15,  9, 36, 37,  7},
	{13, 42, 30, 14,  7, 55, 32, 62},
	{ 6, 15, 52, 46, 34, 49, 50, 43},
	{58, 29,  1,  4, 32, 38, 33, 19},
	{44, 21,  7, 61, 47,  8, 45, 22},
	{ 6, 23, 22, 20, 30, 11, 29, 12},
	{29, 35,  9, 42, 40,  7, 44,  5},
	{21, 61, 23, 58, 57,  0, 36, 42},
	{ 6, 25, 37, 20, 32, 47, 46, 55},
	{23, 32, 43, 40, 22, 50,  0, 59},
	{58, 37, 22, 44, 60, 33, 11, 16},
	{58,  2, 18,  8, 54,  9, 32, 34},
	{50, 59,  4, 29, 17,  8, 60, 24},
	{33,  9, 28, 17, 41, 40, 20, 43},
	{41, 20,  2, 21,  4, 52, 34, 23},
	{34, 29, 16, 11, 32,  6, 50, 41},
	{ 3, 57, 13, 29, 46, 20, 30, 52},
	{35,  4, 38, 48,  9, 17, 47, 51},
	{ 6, 55, 11, 12, 16, 60, 63,  1},
	{61, 47, 59,  0,  1, 15, 41, 62},
	{ 1, 21, 33,  0, 47, 61, 46, 24},
	{49, 12, 59, 53, 32, 60, 43, 24},
	{49,  3, 20, 21, 37, 25, 40,  1},
	{34, 15,  7, 52, 20, 40, 14, 57},
	{38, 14,  4, 61, 32, 31, 21, 41},
	{56, 52, 19, 32, 48, 11, 26, 62},
	{23, 30, 18, 33,  6,  0, 52,  9},
	{34, 29, 41, 57, 53,  3, 24, 55},
	{20, 59, 58, 53, 26, 61, 29, 42},
	{39, 63, 33, 38, 10, 30, 24, 54},
	{25, 53,  0, 18, 47, 24, 37, 13},
	{54, 23, 44, 29, 22, 49, 37, 57},
	{20, 10, 48,  0, 61, 35, 33, 32},
	{42, 56, 16, 31, 27, 21, 10, 62},
	{49, 19, 35, 27, 21, 31, 34, 16},
	{12, 63, 28, 37, 25,  1,  7, 23},
	{60, 28, 20,  4, 61, 25, 34, 30},
	{37, 47, 14, 43, 27, 48, 36, 25},
	{51, 39, 27, 22, 55,  2, 33, 24},
	{25, 19,  8, 58, 59, 26, 48, 38},
	{37,  2, 23, 61,  1, 19, 10, 63},
	{57, 41, 48, 62, 11, 37, 27,  4},
	{47, 41,  7,  5, 32, 46, 22, 38},
	{40, 47, 42, 17, 30, 44,  3, 43},
	{52, 57, 26,  4, 63,  5, 50, 15},
	{23, 53, 42, 52, 61, 35, 45, 14},
	{62, 23, 58, 16, 54,  7,  2, 21},
	{52, 30, 18,  1,  9,  4,  7, 57},
	{31,  0, 20, 36,  8, 40, 62, 53},
	{38, 39, 30, 49, 11, 53,  5, 58},
	{41, 27, 48, 57, 19,  6, 29,  7},
	{45, 28, 18, 53, 31, 20,  1, 33},
	{60, 16,  2,  8, 36, 32, 41, 29},
	{24, 22, 46, 29, 42, 13, 34, 17},
	{56, 19, 48, 18,  0,  4,  7, 51},
	{37, 41,  3, 54, 17, 53,  2, 40},
	{55, 24, 20, 34,  0,  9,  5, 27},
	{ 1, 36, 40,  0, 31, 58, 15,  5},
	{ 9, 50, 30, 58, 29, 18, 16, 34},
	{28, 46, 34, 16, 41, 40, 48, 32},
	{19, 50,  5, 55, 45, 32, 38, 42},
	{ 1, 43, 30, 55, 21,  0, 33, 40},
	{31, 58, 53, 10, 55, 54, 46, 63},
	{10,  2, 50, 59, 33, 46, 39, 53},
	{48, 37, 32, 13, 40, 49,  4, 15},
	{50,  4, 33, 26, 48, 47, 25,  2},
	{46, 52, 63, 14, 41, 26, 37, 19},
	{18, 32, 31, 56, 21, 47, 43, 49},
	{16,  1, 33,  9, 18,  2, 41, 58},
	{26, 33, 17, 59, 51, 39, 29,  6},
	{16, 35, 54, 11,  4, 26, 55, 39},
	{57, 44, 53, 36, 19, 45, 52, 62},
	{38, 10, 57, 41,  7, 11, 45,  8},
	{32, 44, 25, 56, 45, 48, 21, 38},
	{41,  9, 40, 31, 12, 33, 17, 18},
	{10,  4, 41, 48, 33, 19, 15, 31},
	{55, 60, 41,  8, 29,  7, 28, 17},
	{39,  5, 35, 41, 53, 38, 63,  0},
	{32, 23, 26, 46,  4,  0, 29, 41},
	{62, 16, 38, 18,  6, 41, 17, 48},
	{29, 56,  1, 45, 44, 51, 52, 26},
	{ 7,  6, 63, 42,  4, 55,  9, 12},
	{48, 43, 24, 10,  5, 40, 50, 22},
	{ 0, 49, 31,  2, 54, 16,  8, 45},
	{55,  7, 49, 36, 13, 16, 12, 34},
	{48, 39, 37, 57, 17, 46, 23, 51},
	{22, 39, 21, 58, 52, 10, 13, 63},
	{44, 33, 61,  2, 34, 17, 59, 42},
	{41, 54, 45,  5, 20,  1, 22, 32},
	{48,  0, 32, 35, 13, 25, 36, 34},
	{41, 27, 19, 42, 31, 51, 35, 24},
	{14, 60, 13, 25, 42, 10, 36, 29},
	{18, 16,  3, 55, 61, 26, 46, 57},
	{35, 53,  2, 52, 57, 33, 46, 26},
	{42, 19, 31, 40, 54,  1, 38, 49},
	{59, 49, 41, 15, 28, 39, 60, 38},
	{11, 30,  1, 34, 49, 35, 31, 39},
	{14, 11, 39, 41,  3, 34, 46, 21},
	{57, 43, 55, 58,  7, 11, 13,  6},
	{63, 35, 44, 41, 55, 59, 22, 32},
	{52, 46, 10, 22, 25, 48, 17, 23},
	{59, 31,  8, 38,  2, 54, 25, 53},
	{53, 42, 52, 12, 62, 25, 46, 30},
	{ 1, 23, 12,  7, 45, 26, 58, 17},
	{60, 38, 19,  8, 42, 37,  1, 40},
	{32, 20, 45, 17, 61, 29, 19, 24},
	{60, 29, 30, 33, 24, 55, 44, 50},
	{29, 23, 56, 24, 21, 17,  0, 14},
	{ 1, 34,  7,  5, 39, 21, 49, 47},
	{44,  4, 31, 25, 50, 60, 22,  3},
	{58, 31,  9, 10, 30, 41, 60, 56},
	{19, 53, 22,  0, 48, 17, 57, 36},
	{52, 28, 62, 54, 37, 59, 20, 21},
	{ 1, 50, 20, 29, 62, 33, 41, 38},
	{23, 62,  7,  2, 19, 52,  3, 56},
	{21, 56, 33,  9, 30, 28, 60, 63},
	{47, 39, 10, 53, 40, 51,  1,  4},
	{25, 34, 17,  4, 62, 57,  6, 24},
	{ 8, 23, 29, 47, 40, 30, 14, 19},
	{40, 15, 38, 29, 25, 43, 50, 12},
	{19, 52, 20, 42, 59,  7, 12, 58},
	{12, 47, 61, 32, 41, 35, 28, 36},
	{48, 14, 60, 24, 49,  9,  7, 40},
	{45, 11, 36, 39, 44, 22,  0, 62},
	{14,  4, 61,  0, 50, 37, 38, 39},
	{ 6, 15, 43, 49,  7, 21, 52, 34},
	{37, 24, 19, 47,  3, 39,  6, 20},
	{32, 28, 39,  3, 27, 23, 42, 17},
	{61, 55, 29, 24, 27, 54, 63, 52},
	{30, 10, 52, 23,  4, 18, 62, 32},
	{53, 44, 63, 60, 50, 35, 32, 42},
	{27, 63, 29,  6, 50, 32, 16, 39},
	{58, 48, 11, 50, 15, 29, 40, 23},
	{27, 33, 11, 62, 44, 28, 53, 20},
	{18, 28, 16,  4, 29, 56, 22, 43},
	{53, 40, 61,  8, 30,  7, 41, 31},
	{13, 10,  3, 52,  5, 55, 28, 31},
	{ 8,  9, 41,  2, 13, 32, 50, 45},
	{40,  1, 50, 45, 16, 51,  3, 34},
	{28,  4, 29, 58, 27, 59, 56, 16},
	{61,  9,  7, 58, 27,  0, 39, 31},
	{52, 16, 51,  6, 47, 24, 26, 40},
	{21, 16, 26,  7, 39,  8, 13, 29},
	{10, 59, 31,  7, 18, 49, 20, 46},
	{44,  1, 10, 50, 43,  2, 41,  8},
	{42, 16, 59, 56, 15,  8,  3, 27},
	{42, 45, 15, 32, 14,  7,  5,  6},
	{34, 48,  4, 55, 51, 41, 53, 60},
	{ 8,  1, 42, 49, 27, 61, 33,  3},
	{ 0, 24, 17, 47, 41, 30, 60, 25},
	{24, 16, 26, 13, 25, 37, 23, 40},
	{ 3, 24, 61, 56, 17, 15, 63, 40},
	{22, 13, 20, 33,  3, 24, 45, 23},
	{38, 62, 34, 33, 20, 28, 58, 52},
	{62,  0,  3, 54,  4, 44, 10, 26},
	{21, 35, 17,  9, 62, 44, 36, 14},
	{33, 32,  8, 55, 42, 40, 61, 12},
	{56, 25, 15, 57,  2, 46, 41, 36},
	{12,  8, 62,  1, 44, 30, 19,  3},
	{10,  9, 41, 55, 53, 29, 17, 46},
	{62, 14, 43, 11, 20, 12, 41,  2},
	{14, 30, 33,  6, 57, 45, 39, 32},
};
