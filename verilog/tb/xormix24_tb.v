// Copyright (c) 2020-2021 Maarten Baert <info@maartenbaert.be>
// Available under the MIT License - see LICENSE.txt for details.

// This file was generated by `generate_verilog.py`.

`timescale 1ns/1ps

module xormix24_tb;
    
    // configuration
    localparam streams = 4;
    localparam results = 100;
    localparam [23 : 0] seed_x =
        24'h1244da;
    localparam [24 * streams - 1 : 0] seed_y =
        96'h09e3cd3f2a82eedcfdda1a8e;
    
    // reference result
    localparam [24 * streams * results - 1 : 0] ref_result = {
        96'h43a52d1c0923d60f8999dd2b,
        96'h3f167ad8daae665d4b9fdb0b,
        96'ha6de814410cb1da68474147b,
        96'h9c458d74d21921f13e948a9f,
        96'hb84811d55bad3a0636b558ba,
        96'hb012559a58a0f50479f79bf7,
        96'h777fc098096dddd925e99c98,
        96'hf86a028c72f740c233430406,
        96'h8c39a6ee114d7cbe4927d3e0,
        96'haf84f8db9fd1678f8baec5e2,
        96'h355066f1337f03dfb9e5ee54,
        96'hf9676c1d953d5d2b28f1a36b,
        96'h192dadd65f86cf93073c5656,
        96'ha72ce6797fa8f7ddde8b3ef8,
        96'h3c449f23b58c2b27003a5711,
        96'h04e93b0b6a61b1fb04ab696f,
        96'h398f58e13320e0b47d7a89f2,
        96'h7e1ff130777ce65253662303,
        96'h66608085782403f606062982,
        96'h96ae0068466ba283c3c5d16d,
        96'h3cdc79e6df077df03782a9c7,
        96'h63c8316b9b597bbd14c2b8ca,
        96'hd3222fc450c0aa7abc37579d,
        96'h6290dd873aeb44058b991d58,
        96'hc0560b48c5d54337b3149655,
        96'h55ad7f2b57ece959fa2abf3a,
        96'hb582fd1ff01bf0601864ec7b,
        96'hb4ef5f43c651c49ae74b1489,
        96'ha9fec84791424cc5fc49759e,
        96'hc936c4148cbc46d2263476fc,
        96'hebfcfb62e8ab000da128c311,
        96'hf6206f1fe8a42877d211881d,
        96'h1022126810ac846cda1d97fa,
        96'hbd43f29f780b2f3d211c8e54,
        96'hd60eefcfd22e2b5a164ffae8,
        96'h098e763e7c82396a5f263348,
        96'hae5da7e40324951642193f23,
        96'h7c29a64eba8843da678e7e6b,
        96'h07880e33ad0300fae3e3fee0,
        96'h1e43f7fd7c8de0a71d629900,
        96'h1c77b4ca3229d85d7333b1bc,
        96'hfdd2c289bbcf2488f413e899,
        96'hd1e5a9acdacf6bfd33994787,
        96'h33505199c4b5a12f9d75b5f1,
        96'hd58604727633f3b535d872ac,
        96'hcbb34e2711be2c0e110d6ad6,
        96'h26cff834452c96897d48b820,
        96'h39225c6f7085a29d473a5090,
        96'hd311e1bda53234bb31398955,
        96'h290710b2c0aa28e300de879b,
        96'hfb21b80b8554857adaf0e8f2,
        96'h8af89ffd2bbb5513d9f808d1,
        96'h40f2f4f6c15d8371e2bb94d6,
        96'h79854958462a4ed88054e1e3,
        96'h8be38317ec83b7beaa6930e8,
        96'h3f6ada465b0c5c4b072ece97,
        96'hfaf42f0254b3bc9fed42507e,
        96'hd052b704bb1a63183e0b17d2,
        96'h2e76f10e65928109270617c5,
        96'hde79d688ff065fdb07c877c9,
        96'hb8584967741c44988d49f774,
        96'hbb9791edd29b5209202d3477,
        96'h5ebad99067843d4054b09398,
        96'h5781b7e7ab92cd54c2a0447c,
        96'hc3f543b215b3c5cf2665939c,
        96'hf8c0dfe555aeb0b8c5645361,
        96'h40ac66b511b97d6404076ca5,
        96'h183b6a01dcfef91722802f1a,
        96'h79daf35d6e6db86c4bcd9fd4,
        96'hddb6b9de2da824e51e5aa223,
        96'h005d5bac7da34ed554533ab6,
        96'hb28fc13d29ea22a78c79c593,
        96'h615265447a964c77e1951f7a,
        96'h48907555be56c00f3a1cc0d4,
        96'haf857f8e4184105fb6a3a1d4,
        96'he485a6d466a158783f8125df,
        96'hdfe895adee09e7fd5c8868d3,
        96'h8901b250bbb768a6222b4ba2,
        96'ha23daf41694971b340893198,
        96'h6671d7dbae7f98e33648e3b2,
        96'hc08509133aae114332ef808d,
        96'h8663690351e7586bc5f9249f,
        96'h85f91d412d41d7fb91e83ddd,
        96'hfbe841d8d84cd6664bf63e11,
        96'ha9a0340a286c72faeba9f882,
        96'h8617ccd1d3291b8a0a170272,
        96'hea078b1ecb1232fc7d685aef,
        96'h1dde9dfed323dd9fb92a486b,
        96'hc0e1d2b1fa40da5b7a41b2f7,
        96'h79470e7fe7547d6a16eb689d,
        96'ha8a0eeb14a632a71067fdace,
        96'had7e64b70b3b78b7abba2e95,
        96'ha6e256d21078d71a163e844c,
        96'h1f5f0b2930950b877c321915,
        96'h6823e2a532e0e7b145dc3419,
        96'he12083dc8c74e5a3e619ed0a,
        96'h7f5e37f3191889ef6072c6c3,
        96'h45ba8dbccc4a70c64f3e4f72,
        96'h9c8ab069d787303c1f17b52c,
        96'h09e3cd3f2a82eedcfdda1a8e
    };
    
    // DUT signals
    reg clk = 0;
    reg reset;
    reg enable;
    wire [24 * streams - 1 : 0] result;
    
    // flag to stop simulation
    integer run = 1;
    
    // DUT
    xormix24 #(
        .streams(streams)
    ) inst_xormix (
        .clk(clk),
        .reset(reset),
        .seed_x(seed_x),
        .seed_y(seed_y),
        .enable(enable),
        .result(result)
    );
    
    // clock process
    initial begin
        while (run == 1) begin
            clk = 1'b1;
            #5;
            clk = 1'b0;
            #5;
        end
    end
    
    integer i;
    
    // input/output process
    initial begin
        @(posedge clk);
        reset <= 1'b1;
        enable <= 1'b0;
        @(posedge clk);
        reset <= 1'b0;
        enable <= 1'b1;
        for (i = 0; i < results; i = i + 1) begin
            @(posedge clk);
            if (result !== ref_result[24 * streams * i +: 24 * streams])
                $display("Incorrect result");
        end
        run <= 0;
    end
    
endmodule

