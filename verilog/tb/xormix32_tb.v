// Copyright (c) 2020-2021 Maarten Baert <info@maartenbaert.be>
// Available under the MIT License - see LICENSE.txt for details.

// This file was generated by `generate_verilog.py`.

`timescale 1ns/1ps

module xormix32_tb;
    
    // configuration
    localparam streams = 4;
    localparam results = 100;
    localparam [31 : 0] seed_x =
        32'hdf2c403b;
    localparam [32 * streams - 1 : 0] seed_y =
        128'ha9140006e47066dd25e5a545abac0809;
    
    // reference result
    localparam [32 * streams * results - 1 : 0] ref_result = {
        128'h768a44b79e27b1c7af5a64a3a254adf3,
        128'hfa4063ed313ac7f2c9b13801c9394551,
        128'h18de61837e278fc2d2bcd875c4052565,
        128'ha27f3f2dff73dc30f84f18b7ebc3c4df,
        128'hddb815e21d3b1f93f94fd0d73537c84d,
        128'h18b7e8decb2a34e344cfc4977c55c0d3,
        128'h4aaaedcd3bef7a76ef8442bff12a3e03,
        128'h11d23950f6a5014e9d29f6054cd0578a,
        128'h5851d9821a2a67c4d0f2d4992415ca05,
        128'h3b2c3fbc01de0d960e2840c15fcee1b2,
        128'hfd4343a0549e50c2d987fd9bbcd37d12,
        128'h511a52e54c09aaa706f9aeded5439523,
        128'hc59c702970130c130a847c9d3b2124c8,
        128'hb4211a0835482136b403ef1f0ff4f5cf,
        128'hf2179eac3312a30186d90d7c13846e56,
        128'h70d8dc98fd2738066ae2dfcd2137d265,
        128'h7eeae1cfc7b3eca6d5f4c509cdedc06a,
        128'h626a0c24cd0a870dacfe481274a2c7f5,
        128'h509cd2e991620b8c833f75871d3e87db,
        128'hdff7227c4468739d54915ee6230bad4b,
        128'hde08f175f9b3677b1023e8fcb61b2e4c,
        128'h8cc269301f84838b7e82ba6305e4b400,
        128'hc7996e95db3e42af163a2a14abfa4340,
        128'hba1a8e08c48363d84852cdfc5e1e0367,
        128'hdc12177132e26e634e1fcdc26aca1017,
        128'hd8030d03b25d513f2c2d328f1cee4eb8,
        128'h5ad48112b3d9faee85ad58926d187f91,
        128'h3b0ff073e96fcf97072be9c0d490286b,
        128'hd386d5b3f9640bf87f026fec787b02ba,
        128'hd9988e23bfccbdac2a9d20e7ce51e0eb,
        128'h2bea23436c1fb8740b0a542c613e1a95,
        128'h954125a797806824488993ef8d5e65bd,
        128'heb7f5d111e641485d619b41b76bfffbc,
        128'h639a623703741406f0a07faa69ad8444,
        128'h89608e4333007fae1fdb9d60d255f1d8,
        128'h654f5ac763485723d69cd3c426eec6b7,
        128'he346ca0b1c938ca4acad5caece8df638,
        128'hd762b38a9b1a0a3d63d357b6509963d0,
        128'hcb276b9560649c9a22d414ead8c2d2b0,
        128'h529c736c08aa6c99473bfb286eae13d5,
        128'h35cd33e403cbb1c5f2220adc75ea98dc,
        128'hfd59b88df31c6c42955401263798ec5b,
        128'ha7fd5aceb7205939e2ac035fb5f248e6,
        128'hd488b74758818db067946f78014b024e,
        128'h8acf268dc18547e1e88a03b1b037c684,
        128'hfe71c6254f75a9a784104fb832dd4687,
        128'h1d3a9359b83b25af20aef25a9b4ee7e5,
        128'hbb709c959c074e90eb3ab65a2bf2c76e,
        128'h9f417bce52e3fc2e17f7f4e56a10e5a7,
        128'h75b50fc2a4e6e2abeb92b310ff23332c,
        128'h07285a746788dd8a863b1c2147abbfb7,
        128'h979cedbe2d590145239373aefddffbd8,
        128'h1737c2e738d53c3836c864648b9bba53,
        128'he60d5390629d452eaf58066c09133a32,
        128'h943928b6e8804b28a76067a7d6679493,
        128'h6fa47038361d240989afd0c17a3c81a0,
        128'hcccc2523c5e87bc0ad9d9323d97725e4,
        128'h944b5e63e8d441ac29de2b5035effd01,
        128'h385550bac40d532579c616372dbc1a6d,
        128'h10c84ee06129bc1a9ff9a066aacbf866,
        128'hb1cc14dd8071c063acd333dd005113d2,
        128'hcf926986b625ea98190f9d2d0a73d43e,
        128'h8fdee6eece2b896384f6bb581d2f009a,
        128'hf74421d35c56502dc6e1f81ec92c0462,
        128'heb2ef6a9608393b0a21caa49fc149697,
        128'ha214f6d0f9266e1b5f75132be8b21e77,
        128'hf47b7bbeceecb4d7f2a644689d1a7839,
        128'h2070af6b8564a43069ca50b3cd7af47d,
        128'hf963720ca66c4402b63a83b7eff48c07,
        128'hf0ed91522fb9ffc360b8eac119dbf9f2,
        128'h3ce202cec6443fd42f7fd055cd31052b,
        128'h137ecf12affffe1b6ee0c7fcd7262855,
        128'hdfa368df301166437c554e7f9de94d3c,
        128'h2fa433ec9b267623e7831a060568029e,
        128'hdc9d9b1a75b0e28bd0b8ff2b97722842,
        128'h8bcd067165171afbf2aa820af4a849ff,
        128'h41b7381d6e6f3e3360c3784436907503,
        128'h26a522f91acfad657d2fd460326a4304,
        128'h8dba6698e15e09d4286002d8c32af55f,
        128'h4ba832bd0421a023cea7ffb0e24b637a,
        128'h82d908e7a8766ae94308dfe7edf137c6,
        128'hde0f326c7acc3a6ab647ac1d762d69ea,
        128'hda900db03a917327effdb5549a9d099a,
        128'h27e48465db64421e0c3205074aefdae0,
        128'hfe4fd0febddb09eef98f9102089f2658,
        128'h9b83f85af1b7e6ce1a4071cd8e1152c4,
        128'hff939b23e13458f6189a2f6aac2777cc,
        128'h4c4c2530ad735e40f32a80a7c842a60b,
        128'h7e2797101410a49b3745c443c91224ab,
        128'h94caeced541f4abf93d717903d2b14e1,
        128'h974108c6a8ae883f7c128a26a8ba0554,
        128'hafcb8ecea23e27163ff47fdfea8ca751,
        128'ha42017328857fbdf7a9c0d6b6bedf270,
        128'h71ea421610ae033c5e43ecd327b58de9,
        128'hd60dac92060e345d1b79f99ce1f5ef9e,
        128'h64cca5f1395dfebaba3b508793084fc6,
        128'h15fffe97fda43c5acf9c2d620fd34603,
        128'h0b8fcaf74312ea43dacfe300984c07a4,
        128'h72f2ab4fbd5698b41657384cfb444495,
        128'ha9140006e47066dd25e5a545abac0809
    };
    
    // DUT signals
    reg clk = 0;
    reg reset;
    reg enable;
    wire [32 * streams - 1 : 0] result;
    
    // flag to stop simulation
    integer run = 1;
    
    // DUT
    xormix32 #(
        .streams(streams)
    ) inst_xormix (
        .clk(clk),
        .reset(reset),
        .seed_x(seed_x),
        .seed_y(seed_y),
        .enable(enable),
        .result(result)
    );
    
    // clock process
    initial begin
        while (run == 1) begin
            clk = 1'b1;
            #5;
            clk = 1'b0;
            #5;
        end
    end
    
    integer i;
    
    // input/output process
    initial begin
        @(posedge clk);
        reset <= 1'b1;
        enable <= 1'b0;
        @(posedge clk);
        reset <= 1'b0;
        enable <= 1'b1;
        for (i = 0; i < results; i = i + 1) begin
            @(posedge clk);
            if (result !== ref_result[32 * streams * i +: 32 * streams])
                $display("Incorrect result");
        end
        run <= 0;
    end
    
endmodule

